{"version":3,"sources":["context/AppReducer.js","context/GlobalState.js","utils.js","assets/icons/back-arrow.svg","assets/icons/play.svg","assets/icons/pause.svg","components/TrackTile/TrackTile.js","components/ArtistView/ArtistView.js","components/ArtistTile/ArtistTile.js","components/Navbar/SearchView/SearchView.js","assets/icons/user.svg","assets/icons/times.svg","components/Navbar/WalletConnect.js","assets/icons/magnify.svg","components/Navbar/Navbar.js","assets/icons/home.svg","assets/icons/home-focus.svg","assets/icons/explore.svg","assets/icons/explore-focus.svg","assets/icons/podcast.svg","assets/icons/podcast-focus.svg","assets/icons/library.svg","assets/icons/library-focus.svg","components/Sidebar/SideButton.js","assets/logo.svg","components/Sidebar/Sidebar.js","components/Home/Home.js","components/Explore/Explore.js","components/Podcast/Podcast.js","components/Library.js","assets/icons/forward.svg","assets/icons/mute.svg","components/Player/Player.js","assets/music-pass.png","assets/golden-pass.png","components/MusicPass/MusicPass.js","components/MyPass/MyPass.js","App.js","reportWebVitals.js","index.js"],"names":["reducer","state","action","type","provider","payload","songs","currentSong","currentSongID","playing","tracks","searchString","globalArtistModalData","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","value","setProvider","setSongs","setCurrentSong","setCurrentSongID","setPlaying","addTrack","setSearchString","setGlobalArtistModalData","Provider","utils","format_src","src","substring","length","containsExactObject","obj","list","i","_","isEqual","containsID","id","_id","TrackTile","tileHeight","song","tilesPerRow","playlist","index","useContext","useState","hover","setHover","tileContStyle","width","display","flexDirection","justifyContent","marginBottom","alignItems","paddingRight","tileStyle","height","position","cursor","imgStyle","zIndex","opacity","btnStyle","Number","indexOf","backgroundColor","padding","titleStyle","detailsStyle","marginLeft","marginTop","image_src","pause","play","style","onClick","e","stopPropagation","alt","onMouseOver","onMouseLeave","onMouseEnter","name","color","artist","AlbumView","onClose","metadata","global","contentTop","setContentTop","useEffect","handleResize","document","getElementById","offsetHeight","window","addEventListener","removeEventListener","handlePlay","playBtnStyle","data","useMemo","table_data","img_src","push","title","album","columns","Header","accessor","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","modalStyle","top","className","backArrow","image","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","Tile","globalOpen","artistView","setArtistView","playingFromArtist","found","marginRight","textAlign","SearchView","search_string","searchData","artists","singles","podcasts","prepCompare","string","replace","toUpperCase","prepped_search_str","t","single_comp_str","single","Object","keys","key","ArtistTile","podcast","balanceSpanStyle","border","borderRadius","tempButtonStyle","userSVGStyle","WalletConnect","walletNotConnectedText","ethFetchingText","wrongNetworkText","walletConnectText","setWalletConnectText","ETHBalance","setETHBalance","checkTimer","setCheckTimer","checking","setChecking","providerOptions","walletconnect","description","package","WalletConnectProvider","options","infuraId","web3Modal","Web3Modal","network","cacheProvider","theme","background","main","secondary","cachedProvider","ethereum","checkWalletConnection","web3","Web3","recheck","setTimeout","networkVersion","eth","getAccounts","then","accounts","walletString","substr","getBalance","weiBalance","balance","fromWei","toFixed","console","error","pendingWalletConnection","wrongNetwork","connectButtonStyle","connect","res","clearCachedProvider","clearTimeout","user","times","Navbar","magnify","placeholder","onChange","target","to","SideButton","props","location","useLocation","sideSpanStyle","pathname","paddingLeft","svg_map","Home","homeFocus","home","Explore","exploreFocus","explore","Podcast","podcastFocus","Library","libraryFocus","library","textDecoration","text","Sidebar","logo","homeData","latest_tracks","slice","count","tiles","playerShowingStyle","paddingBottom","singlesArr","arr","shuffled_tracks","randomIndex","array","currentIndex","Math","floor","random","shuffle","podcastsArr","Player","playback","setPlayback","stopped","setStopped","songURL","setSongURL","max","setMax","playerLoaded","setPlayerLoaded","volume","setVolume","player","errors","handle_src_error","load","handleForward","oncanplay","duration","ontimeupdate","currentTime","onplay","onpause","onended","navigator","mediaSession","MediaMetadata","artwork","handleBack","paused","handler","setActionHandler","log","playOnReady","new_value","returnPosition","inputSeconds","minutes","trunc","seconds","modalControl","mediaButton","forward","values","step","min","renderTrack","onMouseDown","onTouchStart","ref","getTrackBackground","colors","alignSelf","renderThumb","isDragged","muted","mute","new_volume","MusicPass","pass","goldenPass","contentStyle","textStyle","paddingTop","App","useQuery","query","result","fetching","process_track","track","uri","ipfs","fetch_metadata","ready_track","fetch","response","json","d","animation_url","catch","globalArtistView","path","exact","component","MyPass","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","client","createClient","url","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.9c5d6a1f.chunk.js","sourcesContent":["const reducer = (state, action) => {\n\n\tswitch (action.type) {\n\n\t\tcase 'UPDATE_PROVIDER':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tprovider: action.payload\n\t\t\t};\n\n\t\tcase 'UPDATE_SONGS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsongs: action.payload\n\t\t\t};\n\n\t\tcase 'UPDATE_CURRENT_SONG':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentSong: action.payload\n\t\t\t};\n\n\t\tcase 'UPDATE_CURRENT_SONG_ID':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentSongID: action.payload\n\t\t\t};\n\n\t\tcase 'UPDATE_PLAYING':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tplaying: action.payload\n\t\t\t};\n\n\t\tcase 'ADD_TRACK':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttracks: [...state.tracks, action.payload]\n\t\t\t};\n\n\t\tcase 'UPDATE_SEARCH_STRING':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsearchString: action.payload\n\t\t\t};\n\n\t\tcase 'UPDATE_GLOBAL_ARTIST_MODAL_DATA':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tglobalArtistModalData: action.payload\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\n\t}\n\n}\n\nexport default reducer","import { createContext, useReducer } from 'react'\nimport AppReducer from './AppReducer'\n\n// Initial state\nconst initialState = {\n\tprovider: null,\n\tsongs: null,\n\tcurrentSong: 0,\n\tcurrentSongID: null,\n\tplaying: 0, //0 not playing, 1 playing, 2 waiting\n\ttracks: [],\n\tsearchString: '',\n\tglobalArtistModalData: null\n}\n\n// Create context\nexport const GlobalContext = createContext(initialState)\n\n// Provider component\nexport const GlobalProvider = ({ children }) => {\n\n\tconst [state, dispatch] = useReducer(AppReducer, initialState)\n\n\tfunction setProvider(value) {\n\t\tdispatch({\n\t\t\ttype: 'UPDATE_PROVIDER',\n\t\t\tpayload: value\n\t\t})\n\t}\n\n\tfunction setSongs(value) {\n\t\tdispatch({\n\t\t\ttype: 'UPDATE_SONGS',\n\t\t\tpayload: value\n\t\t})\n\t}\n\n\tfunction setCurrentSong(value) {\n\t\tdispatch({\n\t\t\ttype: 'UPDATE_CURRENT_SONG',\n\t\t\tpayload: value\n\t\t})\n\t}\n\n\tfunction setCurrentSongID(value) {\n\t\tdispatch({\n\t\t\ttype: 'UPDATE_CURRENT_SONG_ID',\n\t\t\tpayload: value\n\t\t})\n\t}\n\n\tfunction setPlaying(value) {\n\t\tdispatch({\n\t\t\ttype: 'UPDATE_PLAYING',\n\t\t\tpayload: value\n\t\t})\n\t}\n\n\tfunction addTrack(value) {\n\t\tdispatch({\n\t\t\ttype: 'ADD_TRACK',\n\t\t\tpayload: value\n\t\t})\n\t}\n\n\tfunction setSearchString(value) {\n\t\tdispatch({\n\t\t\ttype: 'UPDATE_SEARCH_STRING',\n\t\t\tpayload: value\n\t\t})\n\t}\n\n\tfunction setGlobalArtistModalData(value) {\n\t\tdispatch({\n\t\t\ttype: 'UPDATE_GLOBAL_ARTIST_MODAL_DATA',\n\t\t\tpayload: value\n\t\t})\n\t}\n\n\tconst value = {\n\t\tprovider: state.provider,\n\t\tsetProvider,\n\t\tsongs: state.songs,\n\t\tsetSongs,\n\t\tcurrentSong: state.currentSong,\n\t\tsetCurrentSong,\n\t\tcurrentSongID: state.currentSongID,\n\t\tsetCurrentSongID,\n\t\tplaying: state.playing,\n\t\tsetPlaying,\n\t\ttracks: state.tracks,\n\t\taddTrack,\n\t\tsearchString: state.searchString,\n\t\tsetSearchString,\n\t\tglobalArtistModalData: state.globalArtistModalData,\n\t\tsetGlobalArtistModalData\n\t}\n\n\treturn (\n\n\t\t<GlobalContext.Provider value={value}>\n\n\t\t\t{children}\n\n\t\t</GlobalContext.Provider>\n\n\t  )\n\n}","import _ from 'lodash'\n\nconst format_src = (src) => {\n\treturn 'https://ipfs.io/' + src.substring('ipfs://'.length)\n}\n\nconst containsExactObject = (obj, list) => {\n\tlet i\n\tfor (i = 0; i < list.length; i++) {\n\t\tif (_.isEqual(obj, list[i])) {\n\t\t\treturn true\n\t\t}\n\t}\n\treturn false\n}\n\nconst containsID = (id, list) => {\n\tlet i\n\tfor (i = 0; i < list.length; i++) {\n\t\tif (id === list[i]._id) {\n\t\t\treturn true\n\t\t}\n\t}\n\treturn false\n}\n\nconst utils = {\n    format_src,\n    containsExactObject,\n    containsID,\n\t_\n}\n\nexport default utils","export default __webpack_public_path__ + \"static/media/back-arrow.2110c78d.svg\";","export default __webpack_public_path__ + \"static/media/play.171cccd4.svg\";","export default __webpack_public_path__ + \"static/media/pause.62fc3c4c.svg\";","import { useContext, useState } from 'react'\nimport { GlobalContext } from '../../context/GlobalState'\nimport play from '../../assets/icons/play.svg'\nimport pause from '../../assets/icons/pause.svg'\n\nconst TrackTile = ({ tileHeight, song, tilesPerRow = 2, playlist, index = 0 }) => {\n\n\tconst { setSongs, setCurrentSong, setPlaying, playing, currentSongID } = useContext(GlobalContext)\n\n    const [hover, setHover] = useState(false)\n\n    const containerWidth = 100/tilesPerRow + '%'\n\n    const tileContStyle = {\n        width: containerWidth,\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"flex-start\",\n        marginBottom: \"1em\",\n        alignItems: \"center\",\n        paddingRight: '2em'\n    }\n\n    if (tilesPerRow > 2) {\n        tileContStyle.flexDirection = 'column'\n        tileContStyle.marginBottom = '2em'\n        tileContStyle.alignItems ='unset'\n    }\n\n    const tileStyle = {\n        height: tileHeight,\n        width: tileHeight,\n        position: \"relative\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        cursor: \"pointer\"\n    }\n\n    const imgStyle = {\n        height: \"100%\",\n        width: \"100%\",\n        position: \"relative\",\n        zIndex: \"0\",\n        opacity: hover ? '0.75' : '1'\n    }\n\n    const btnHeight = Number(tileHeight.substring(0, tileHeight.indexOf('em'))) * 0.25 + 'em' //button height is made 25% of tile height\n\n    const btnStyle = {\n        height: btnHeight,\n        backgroundColor: \"transparent\",\n        padding: 0,\n        position: \"absolute\",\n        zIndex: \"1\",\n        cursor: \"pointer\"\n    }\n\n    const playSVGStyle = {\n        height: \"100%\",\n        width: 'auto'\n    }\n\n    const nameStyle = {\n        color: \"#62728E\"\n    }\n\n    const titleStyle = {}\n\n    if (tilesPerRow > 2) {\n        titleStyle.marginBottom = '0.5em'\n    }\n\n    const detailsStyle = {\n        marginLeft: \"1em\"\n    }\n\n    if (tilesPerRow > 2) {\n        detailsStyle.marginLeft = 0\n        detailsStyle.marginTop = '1em'\n    }\n\n    const handlePlay = e => {\n\n        e.stopPropagation() //stops ArtistView from opening if play is clicked\n\n        if (playing === 2 && currentSongID === song._id) {\n            setPlaying(1) //resumes the song in the player\n        } else if (playing === 1 && currentSongID === song._id) {\n            setPlaying(2) //pauses the song in the player\n        } else {\n            setPlaying(1)\n            setCurrentSong(index) //default to first\n            if (playlist) {\n                setSongs(playlist)\n            } else {\n                setSongs([song])\n            }\n        }\n\n    }\n\n    const image_src = playing === 1 && currentSongID === song._id ? pause : play\n\n    return (\n        <div style={tileContStyle}>\n            <div style={tileStyle} onClick={handlePlay}>\n                <img style={imgStyle} src={song.src} alt=\"\" onMouseOver={() => setHover(true)} onMouseLeave={() => setHover(false)} />\n                {hover &&\n                    <div style={btnStyle} onMouseEnter={() => setHover(true)}>\n                        <img style={playSVGStyle} src={image_src} alt=\"\" />\n                    </div>\n                }\n            </div>\n            <div style={detailsStyle}>\n                <p style={titleStyle}>{song.name}</p>\n                <p style={nameStyle}>{song.artist}</p>\n            </div>\n        </div>\n    )\n\n}\n\nexport default TrackTile\n","import { useContext, useEffect, useState, useMemo } from 'react'\nimport { GlobalContext } from '../../context/GlobalState'\nimport { useTable } from 'react-table'\nimport play from '../../assets/icons/play.svg'\nimport pause from '../../assets/icons/pause.svg'\nimport backArrow from '../../assets/icons/back-arrow.svg'\nimport \"./ArtistView.css\"\n\nconst AlbumView = ({ onClose, metadata, global = false }) => {\n\n\tconst { setSongs, setCurrentSong, playing, setPlaying, currentSongID, setGlobalArtistModalData } = useContext(GlobalContext)\n    const [contentTop, setContentTop] = useState('auto')\n\n    useEffect(() => {\n\n        const handleResize = () => {\n            setContentTop(document.getElementById('navbar').offsetHeight)\n        }\n\n        window.addEventListener('resize', handleResize)\n        handleResize()\n\n        return () => {\n            window.removeEventListener('resize', handleResize)\n        }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const handlePlay = i => {\n\n        if (playing === 2 && currentSongID === metadata.songs[i]._id) {\n            setPlaying(1) //resumes the song in the player\n        } else if (playing === 1 && currentSongID === metadata.songs[i]._id) {\n            setPlaying(2) //pauses the song in the player\n        } else {\n            setPlaying(1)\n            setCurrentSong(i)\n            setSongs(metadata.songs)\n        }\n\n    }\n\n    const checkClose = () => {\n\n        if (global) {\n            return setGlobalArtistModalData(null)\n        } else {\n            onClose()\n        }\n\n    }\n\n    const playBtnStyle = {\n\t\topacity: 0.5,\n        padding: 0,\n        backgroundColor: 'transparent'\n    }\n\n    const data = useMemo(\n\n    \t() => {\n\n            const table_data = []\n\n            for (let i = 0; i < metadata.songs.length; i++) {\n\n                const img_src = playing === 1 && currentSongID === metadata.songs[i]._id ? pause : play\n\n                table_data.push({\n                    play: <button style={playBtnStyle} onClick={() => handlePlay(i)}><img src={img_src} alt=\"\" width=\"12px\" ></img></button>,\n                    title: metadata.songs[i].name,\n                    artist: metadata.songs[i].artist,\n                    album: metadata.songs[i].album,\n                    // duration: metadata.songs[i].duration,\n                    // genre: metadata.genre,\n                    // price: metadata.songs[i].price\n                })\n        \n            }\n\n            return table_data\n            \n        },\n    \t// eslint-disable-next-line react-hooks/exhaustive-deps\n    \t[currentSongID, playing]\n\n    ) //table data declaration\n\n    const columns = useMemo(\n        () => [{\n                Header: '',\n                accessor: 'play', // accessor is the \"key\" in the data\n            }, {\n                Header: 'SONG TITLE',\n                accessor: 'title',\n            },\n            {\n                Header: 'ARTIST',\n                accessor: 'artist',\n            },\n            {\n                Header: 'ALBUM',\n                accessor: 'album',\n            },\n            // {\n            // \tHeader: 'DURATION',\n            // \taccessor: 'duration',\n            // },\n            // {\n            // \tHeader: 'GENRE',\n            // \taccessor: 'genre',\n            // },\n            // {\n            // \tHeader: 'PRICE',\n            // \taccessor: 'price',\n            // }\n        ],\n        []\n    ) //table header-key relationship\n\n    const {\n    \tgetTableProps,\n    \tgetTableBodyProps,\n    \theaderGroups,\n    \trows,\n    \tprepareRow\n    } = useTable({\n    \tcolumns,\n    \tdata\n    })\n\n    const modalStyle = {\n        top: contentTop\n    }\n\n    return (\n        <div className=\"modal\" style={modalStyle}>\n\n            <div className=\"modal_header\">\n                <button className=\"close_btn\" onClick={checkClose}><img src={backArrow} alt=\"\" />Back</button>\n            </div>\n\n            <div className=\"modal_content\">\n\n                <img className=\"image\" src={metadata.image} alt=\"\" />\n\n                <div className=\"info\">\n                    <h2>{metadata.name}</h2>\n                    <h3>{metadata.artist}</h3>\n                    {/* <span>{metadata.genre} {metadata.year}</span> */}\n                    <button onClick={() => handlePlay(0)}>\n                        <img src={play} alt=\"\" />\n                        Play all\n                    </button>\n                </div>\n\n                <table {...getTableProps()} className=\"table\">\n\n                    <thead>\n\n                        {headerGroups.map(headerGroup => (\n                            <tr {...headerGroup.getHeaderGroupProps()}>\n                                {headerGroup.headers.map(column => (\n                                <th\n                                {...column.getHeaderProps()}\n                                >\n                                {column.render('Header')}\n                                </th>\n                                ))}\n                            </tr>\n                        ))}\n\n                    </thead>\n\n                    <tbody {...getTableBodyProps()}>\n\n                        {rows.map(row => {\n\n                            prepareRow(row)\n\n                            return (\n                                <tr {...row.getRowProps()}>\n                                    {row.cells.map(cell => {\n                                    return (\n                                    <td\n                                    {...cell.getCellProps()}\n                                    >\n                                    {cell.render('Cell')}\n                                    </td>\n                                    )\n                                    })}\n                                </tr>\n                            )\n\n                        })}\n\n                    </tbody>\n\n                </table>\n\n            </div>\n\n        </div>\n    )\n\n}\n\nexport default AlbumView\n","import { useContext, useState, useMemo } from 'react'\nimport { GlobalContext } from '../../context/GlobalState'\nimport play from '../../assets/icons/play.svg'\nimport pause from '../../assets/icons/pause.svg'\nimport ArtistView from '../ArtistView/ArtistView'\n\nconst Tile = ({ tileHeight = '14em', data, globalOpen = false }) => {\n\n\tconst { setSongs, setCurrentSong, setPlaying, playing, currentSongID, setSearchString, setGlobalArtistModalData } = useContext(GlobalContext)\n\n    const [hover, setHover] = useState(false)\n    const [artistView, setArtistView] = useState(false)\n\n    const playingFromArtist = useMemo(() => {\n\n        let found = false\n\n        for (const song of data.songs) {\n            if (song._id === currentSongID) {\n                found = true\n            }\n        }\n\n        return found\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentSongID])\n\n    const tileContStyle = {\n        width: tileHeight,\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginRight: \"2em\",\n\t\tcursor: \"pointer\"\n    }\n\n    const tileStyle = {\n        height: tileHeight,\n        width: tileHeight,\n        position: \"relative\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginBottom: \"0.5em\"\n    }\n\n    const imgStyle = {\n        height: \"100%\",\n        width: \"100%\",\n        position: \"relative\",\n        zIndex: \"0\",\n        opacity: hover ? '0.75' : '1'\n    }\n\n    const btnHeight = Number(tileHeight.substring(0, tileHeight.indexOf('em'))) * 0.25 + 'em' //button height is made 25% of tile height\n\n    const btnStyle = {\n        height: btnHeight,\n        backgroundColor: \"transparent\",\n        padding: 0,\n        position: \"absolute\",\n        zIndex: \"1\",\n        cursor: \"pointer\"\n    }\n\n    const playSVGStyle = {\n        height: \"100%\",\n        width: 'auto'\n    }\n\n    const nameStyle = {\n        color: \"#62728E\",\n        textAlign: \"center\"\n    }\n\n    const handlePlay = e => {\n        \n        e.stopPropagation() //stops ArtistView from opening if play is clicked\n\n        if (playing === 2 && playingFromArtist) {\n            setPlaying(1) //resumes the song in the player\n        } else if (playing === 1 && playingFromArtist) {\n            setPlaying(2) //pauses the song in the player\n        } else {\n            setPlaying(1)\n            setCurrentSong(0) //first song in list\n            setSongs(data.songs)\n        }\n        \n    }\n\n    const openAlbum = () => {\n\n        setHover(false)\n\n        if (globalOpen) {\n\n            setSearchString('')\n            setGlobalArtistModalData(data)\n\n        } else {\n            \n            if (!artistView) {\n                setArtistView(true)\n            }\n\n        }\n\n    }\n\n    const closeAlbum = () => {\n        if (!globalOpen) {\n            \n            if (artistView) {\n                setArtistView(false)\n            }\n            \n        }   \n    }\n\n    const image_src = playing === 1 && playingFromArtist ? pause : play\n\n    return (\n        <div style={tileContStyle}>\n            <div style={tileStyle} onClick={openAlbum}>\n                <img style={imgStyle} src={data.image} alt=\"\" onMouseOver={() => setHover(true)} onMouseLeave={() => setHover(false)} />\n                {hover &&\n                    <div style={btnStyle} onMouseEnter={() => setHover(true)}>\n                        <img style={playSVGStyle} src={image_src} alt=\"\" onClick={handlePlay} />\n                    </div>\n                }\n                {artistView &&\n                    <ArtistView onClose={closeAlbum} metadata={data}/>\n                }\n            </div>\n            <p style={nameStyle}>{data.name}</p>\n        </div>\n    )\n\n}\n\nexport default Tile\n","import { useEffect, useState, useMemo, useContext } from 'react'\nimport { GlobalContext } from '../../../context/GlobalState'\nimport utils from '../../../utils'\nimport backArrow from '../../../assets/icons/back-arrow.svg'\nimport TrackTile from '../../TrackTile/TrackTile'\nimport ArtistTile from '../../ArtistTile/ArtistTile'\nimport \"./SearchView.css\"\n\nconst SearchView = ({ search_string }) => {\n\n    const { tracks, setSearchString } = useContext(GlobalContext)\n\n    const [contentTop, setContentTop] = useState('auto')\n\n    const searchData = useMemo(() => {\n\n        const obj = {\n            artists: {},\n            singles: [],\n            podcasts: []\n        }\n\n        const prepCompare = string => {\n            if (!string) {\n                return string\n            }\n            string = string.replace('-', '')\n            string = string.replace('.', '')\n            string = string.toUpperCase()\n            return string\n        }\n\n        if (search_string.length > 1) { //only starts searching when more than 1 char has been entered\n\n            const prepped_search_str = prepCompare(search_string)\n    \n            for (const t of tracks) {\n\n                if (!t.artist) {\n                    t.artist = 'Unknown'\n                }\n    \n                const artist_comp_str = prepCompare(t.artist)\n        \n                if (artist_comp_str.indexOf(prepped_search_str) > -1) {\n        \n                    if (t.artist in obj.artists) {\n            \n                        if (!utils.containsExactObject(t, obj.artists[t.artist].songs)) {\n                            obj.artists[t.artist].songs.push(t)\n                        }\n            \n                    } else { //first song for artist\n            \n                        obj.artists[t.artist] = {\n                            name: t.artist,\n                            image: t.src, //using first song's image as artist's\n                            songs: [t]\n                        }\n            \n                    }\n                    \n                }\n    \n                const single_comp_str = prepCompare(t.name)\n        \n                if (single_comp_str.indexOf(prepped_search_str) > -1 && t.type === 'song') {\n                    obj.singles.push(t)\n                }\n        \n                if (single_comp_str.indexOf(prepped_search_str) > -1 && t.type === 'podcast') {\n                    obj.podcasts.push(t)\n                }\n                \n            }\n            \n        }\n\n        return obj\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [search_string, tracks])\n\n    useEffect(() => {\n\n        const handleResize = () => {\n            setContentTop(document.getElementById('navbar').offsetHeight)\n        }\n\n        window.addEventListener('resize', handleResize)\n        handleResize()\n\n        return () => {\n            window.removeEventListener('resize', handleResize)\n        }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const closeModal = () => {\n        setSearchString('')\n    }\n\n    const modalStyle = {\n        top: contentTop\n    }\n\n    const singles = searchData.singles.map(single => \n        <TrackTile key={single._id} tileHeight=\"5em\" song={single} />\n    )\n\n    const artists = Object.keys(searchData.artists).map(key => \n        <ArtistTile key={key} tileHeight=\"10em\" data={searchData.artists[key]} globalOpen={true} />\n    )\n\n    const podcasts = searchData.podcasts.map(podcast => \n        <TrackTile key={podcast._id} tileHeight=\"5em\" song={podcast} />\n    )\n\n    return (\n        <div className=\"search_modal\" style={modalStyle}>\n\n            <div className=\"search_modal_header\">\n                <button className=\"close_btn\" onClick={closeModal}><img src={backArrow} alt=\"\" />Back</button>\n            </div>\n\n            <div className=\"search_modal_content\">\n                <h3>Search Results</h3>\n\n                <div className=\"singles_grid\">\n                    { searchData.singles.length > 0 &&\n                        <>\n                            <h2>Songs</h2>\n                            {singles}\n                        </>\n                    }\n                    { !!Object.keys(searchData.artists).length > 0 &&\n                        <>\n                            <h2>Artists</h2>\n                            {artists}\n                        </>\n                    }\n                    { searchData.podcasts.length > 0 &&\n                        <>\n                            <h2>Podcasts</h2>\n                            {podcasts}\n                        </>\n                    }\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default SearchView\n","export default __webpack_public_path__ + \"static/media/user.126de776.svg\";","export default __webpack_public_path__ + \"static/media/times.82a5f87a.svg\";","import { useState, useEffect, useContext } from 'react'\nimport { GlobalContext } from '../../context/GlobalState'\nimport Web3 from 'web3'\nimport Web3Modal from 'web3modal'\nimport WalletConnectProvider from '@walletconnect/web3-provider'\nimport user from '../../assets/icons/user.svg'\nimport times from '../../assets/icons/times.svg'\n\nconst WalletConnect = () => {\n\n\tconst { provider, setProvider } = useContext(GlobalContext)\n\n\tconst walletNotConnectedText = 'Connect Wallet',\n\t\tethFetchingText = 'Fetching...',\n\t\twrongNetworkText = 'Wrong Network'\n\n    const [walletConnectText, setWalletConnectText] = useState(walletNotConnectedText)\n    const [ETHBalance, setETHBalance] = useState(ethFetchingText)\n    const [checkTimer, setCheckTimer] = useState(null)\n    const [checking, setChecking] = useState(false)\n\n    const providerOptions = {\n    \twalletconnect: {\n    \t\tdisplay: {\n    \t\t\tname: \"WalletConnect\",\n    \t\t\tdescription: \"Scan the QR code with your mobile wallet to connect.\"\n    \t\t},\n    \t\tpackage: WalletConnectProvider,\n    \t\toptions: {\n    \t\t\tinfuraId: \"c91abd5028e84b1c9001abd007b3e258\" // required\n    \t\t}\n    \t}\n    }\n\n    const web3Modal = new Web3Modal({\n    \tnetwork: \"mainnet\", // optional\n    \tcacheProvider: true, // optional\n    \tproviderOptions, // required\n    \ttheme: {\n    \t\tbackground: \"rgb(39, 49, 56)\",\n    \t\tmain: \"rgb(199, 199, 199)\",\n    \t\tsecondary: \"rgb(136, 136, 136)\",\n    \t\tborder: \"rgba(195, 195, 195, 0.14)\",\n    \t\thover: \"rgb(16, 26, 32)\"\n    \t}\n    })\n\n    useEffect(() => {\n\n    \tif (web3Modal.cachedProvider === 'injected') {\n    \t\tsetProvider(window.ethereum)\n    \t}\n\n\t// disable hook dependency to use as singular render\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n\tconst checkWalletConnection = () => {\n\n\t\tif (provider) {\n\n\t\t\tconst web3 = new Web3(provider)\n\n\t\t\tconst recheck = () => {\n\t\t\t\tif (!checking) {\n\t\t\t\t\tsetChecking(true)\n\n\t\t\t\t\tsetCheckTimer(\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tsetChecking(false)\n\t\t\t\t\t\t\tcheckWalletConnection()\n\t\t\t\t\t\t}, 1500)\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (provider.networkVersion === '1') { //mainnet\n\n\t\t\t\tweb3.eth.getAccounts().then(\n\t\t\t\t\taccounts => {\n\n\t\t\t\t\t\tif (accounts.length > 0) {\n\n\t\t\t\t\t\t\tconst walletString = accounts[0].substr(0, 4) + '...' + accounts[0].substr(accounts[0].length - 4)\n\n\t\t\t\t\t\t\tsetWalletConnectText(walletString)\n\n\t\t\t\t\t\t\tweb3.eth.getBalance(accounts[0]).then(\n\t\t\t\t\t\t\t\tweiBalance => {\n\t\t\t\t\t\t\t\t\tconst balance = Number(web3.utils.fromWei(weiBalance)).toFixed(3)\n\t\t\t\t\t\t\t\t\tsetETHBalance(balance + ' ETH')\n\t\t\t\t\t\t\t\t\trecheck()\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\te => {\n\t\t\t\t\t\t\t\t\tconsole.error(e)\n\t\t\t\t\t\t\t\t\tsetETHBalance('Failed')\n\t\t\t\t\t\t\t\t\trecheck()\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tsetWalletConnectText(walletNotConnectedText)\n\t\t\t\t\t\t\tsetETHBalance(ethFetchingText)\n\t\t\t\t\t\t\trecheck()\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t},\n\t\t\t\t\te => {\n\t\t\t\t\t\tconsole.error(e)\n\t\t\t\t\t\trecheck()\n\t\t\t\t\t}\n\t\t\t\t)\n\n\t\t\t} else {\n\n\t\t\t\tsetWalletConnectText(wrongNetworkText)\n\t\t\t\tsetETHBalance(ethFetchingText)\n\t\t\t\trecheck()\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n    useEffect(() => {\n\n    \tif (provider === null) {\n    \t\tsetWalletConnectText(walletNotConnectedText)\n    \t\treturn setETHBalance(ethFetchingText)\n    \t}\n\n\t\tcheckWalletConnection()\n\n    \t// eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [provider])\n\n    const promptWallet = () => {\n\n\t\tif (walletConnectText === walletNotConnectedText) {\n\n\t\t\tweb3Modal.connect().then(\n\t\t\t\tres => {\n\n\t\t\t\t\tsetProvider(res)\n\n\t\t\t\t},\n\t\t\t\te => {\n\n\t\t\t\t\tconsole.error(e)\n\n\t\t\t\t\tweb3Modal.clearCachedProvider()\n\t\t\t\t\tsetCheckTimer(clearTimeout(checkTimer))\n\t\t\t\t\tsetChecking(false)\n\t\t\t\t\tsetProvider(null)\n\n\t\t\t\t}\n\t\t\t)\n\n\t\t}\n\n    }\n\n    const logOut = () => {\n\n    \tweb3Modal.clearCachedProvider()\n\t\tsetCheckTimer(clearTimeout(checkTimer))\n\t\tsetChecking(false)\n    \tsetProvider(null)\n\n    }\n\n    const pendingWalletConnection = (walletConnectText === walletNotConnectedText)\n\tconst wrongNetwork = (walletConnectText === wrongNetworkText)\n\n    const connectButtonStyle = {\n    \tbackgroundColor: pendingWalletConnection ? '#00C8D4' : wrongNetwork ? '#FE4141' : '#303847',\n    \tcolor: pendingWalletConnection || wrongNetwork ? \"#FFFFFF\" : \"#62728E\",\n    \tcursor: pendingWalletConnection ? \"pointer\" : \"default\",\n    \tborderRadius: \"8px\"\n    }\n\n    return (\n        <div>\n\n            {!pendingWalletConnection && !wrongNetwork &&\n                <span style={balanceSpanStyle}>{ETHBalance}</span>\n            }\n\n            <button style={connectButtonStyle} onClick={promptWallet}>\n                {!pendingWalletConnection && !wrongNetwork &&\n                    <img style={userSVGStyle} src={user} alt=\"\" />\n                }\n                {walletConnectText}\n            </button>\n\n\t\t\t{!pendingWalletConnection &&\n\t\t\t\t<button style={tempButtonStyle} onClick={logOut}>\n\t\t\t\t\t<img src={times} alt=\"\" />\n\t\t\t\t</button>\n\t\t\t}\n\n        </div>\n    )\n}\n\nconst balanceSpanStyle = {\n    border: \"2px solid #303847\",\n    color: \"#62728E\",\n    padding: \"0.45em 1.5em 0.45em 1em\",\n    borderRadius: \"8px 0 0 8px\",\n    marginRight: \"-0.5em\"\n}\n\nconst tempButtonStyle = {\n    backgroundColor: 'transparent',\n\tcolor: '#FFFFFF',\n\tpaddingRight: 0\n}\n\nconst userSVGStyle = {\n    paddingRight: \"0.5em\",\n    height: \"1em\",\n    width: 'auto'\n}\n\nexport default WalletConnect\n","export default __webpack_public_path__ + \"static/media/magnify.3c1c3235.svg\";","import { useContext } from 'react'\nimport { GlobalContext } from '../../context/GlobalState'\nimport { Link } from 'react-router-dom'\nimport SearchView from './SearchView/SearchView'\nimport WalletConnect from './WalletConnect'\nimport magnify from '../../assets/icons/magnify.svg'\nimport \"./Navbar.css\"\n\nconst Navbar = () => {\n\n    const inputPlaceHolder = 'Search for songs, artists etc.'\n\n    const { searchString, setSearchString } = useContext(GlobalContext)\n\n    return (\n        <div className=\"navbar\" id=\"navbar\">\n\n            <div className=\"search-cont\">\n\n                <img src={magnify} alt=\"\" />\n                <input placeholder={inputPlaceHolder} value={searchString} onChange={e => setSearchString(e.target.value)}></input>\n\n            </div>\n\n            <div className=\"navbar-right\">\n                <Link to='/musicPass' className=\"btn-navbar\" >Music Pass</Link>\n                {/*<Link to='/myPass' className=\"btn-navbar\" >My Pass</Link>*/}\n                <WalletConnect />\n\n            </div>\n\n            { searchString &&\n                <SearchView search_string={searchString} />\n            }\n\n        </div>\n    )\n\n}\n\nexport default Navbar\n","export default __webpack_public_path__ + \"static/media/home.1b76e15b.svg\";","export default __webpack_public_path__ + \"static/media/home-focus.ce32ea31.svg\";","export default __webpack_public_path__ + \"static/media/explore.ffac5b3c.svg\";","export default __webpack_public_path__ + \"static/media/explore-focus.cddb4b9e.svg\";","export default __webpack_public_path__ + \"static/media/podcast.5d382983.svg\";","export default __webpack_public_path__ + \"static/media/podcast-focus.a06cf377.svg\";","export default __webpack_public_path__ + \"static/media/library.3f99650c.svg\";","export default __webpack_public_path__ + \"static/media/library-focus.9b10c597.svg\";","import { Link, useLocation } from 'react-router-dom'\nimport home from '../../assets/icons/home.svg'\nimport homeFocus from '../../assets/icons/home-focus.svg'\nimport explore from '../../assets/icons/explore.svg'\nimport exploreFocus from '../../assets/icons/explore-focus.svg'\nimport podcast from '../../assets/icons/podcast.svg'\nimport podcastFocus from '../../assets/icons/podcast-focus.svg'\nimport library from '../../assets/icons/library.svg'\nimport libraryFocus from '../../assets/icons/library-focus.svg'\nimport \"./Sidebar.css\"\n\nconst SideButton = (props) => {\n    const location = useLocation()\n\n    const sideSpanStyle = {\n        color: location.pathname === props.location ? \"#00C8D4\" : \"#62728E\",\n        paddingLeft: \"5px\"\n    }\n\n    const svg_map = {\n        Home: location.pathname === props.location ? homeFocus : home,\n        Explore: location.pathname === props.location ? exploreFocus : explore,\n        Podcast: location.pathname === props.location ? podcastFocus : podcast,\n        Library: location.pathname === props.location ? libraryFocus : library\n    }\n\n    return (\n        <Link to={props.location} style={{textDecoration: 'none'}}>\n            <div className=\"sideBtnDiv\">\n\n                <img src={svg_map[props.text]} alt=\"\" />\n                <span style={sideSpanStyle}>{props.text}</span>\n\n            </div>\n        </Link>\n    )\n}\n\nexport default SideButton\n","export default __webpack_public_path__ + \"static/media/logo.23731195.svg\";","import SideButton from './SideButton'\nimport \"./Sidebar.css\"\nimport logo from '../../assets/logo.svg'\n\n\nconst Sidebar = () => {\n\n    return (\n      <div className=\"sidebar-wrapper\">\n      <img className=\"logo\" src={logo} alt=\"\" />\n        <div className=\"sidebar\">\n            <SideButton text=\"Home\" location=\"/app\"/>\n            <SideButton text=\"Explore\" location=\"/explore\"/>\n            <SideButton text=\"Podcast\" location=\"/podcast\"/>\n            {/*<SideButton text=\"Library\" location=\"/library\"/>*/}\n        </div>\n      </div>\n    )\n}\n\nexport default Sidebar\n","import { useMemo, useContext } from 'react'\nimport { GlobalContext } from '../../context/GlobalState'\nimport utils from '../../utils'\nimport ArtistTile from '../ArtistTile/ArtistTile'\nimport TrackTile from '../TrackTile/TrackTile'\nimport \"./Home.css\"\n\nconst Home = () => {\n\n    const { tracks, playing } = useContext(GlobalContext)\n\n    const homeData = useMemo(() => {\n\n        const obj = {\n            artists: {},\n            singles: []\n        }\n        \n        const singlesShown = 8, artistsShown = 5\n\n        const latest_tracks = tracks.slice(0, singlesShown)\n\n        if (!utils._.isEqual(obj.singles, latest_tracks)) {\n\n            obj.singles = latest_tracks\n            \n        }\n\n        let count = 1\n\n        for (const t of tracks) {\n\n            if (count <= artistsShown || t.artist in obj.artists) {\n\n                if (t.type === 'song') { //looking for non podcast tracks\n        \n                    if (t.artist in obj.artists) {\n            \n                        if (!utils.containsExactObject(t, obj.artists[t.artist].songs)) {\n                            obj.artists[t.artist].songs.push(t)\n                        }\n                        \n                    } else { //first song for artist\n            \n                        obj.artists[t.artist] = {\n                            name: t.artist,\n                            image: t.src, //using first song's image as artist's\n                            songs: [t]\n                        }\n\n                        count++\n            \n                    }\n                    \n                }\n                \n            }\n            \n        }\n\n        return obj\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [tracks])\n\n    const tiles = Object.keys(homeData.artists).map(key => \n        <ArtistTile key={key} tileHeight=\"14em\" data={homeData.artists[key]} />\n    )\n\n    const singles = homeData.singles.map(single => \n        <TrackTile key={single._id} tileHeight=\"5em\" song={single} />\n    )\n\n    const playerShowingStyle = {\n        paddingBottom: playing !== 0 ? document.getElementById('play_modal').offsetHeight + 32 : 0\n    }\n\n    return (\n        <div className=\"home\" style={playerShowingStyle}>\n\n            {tracks.length > 0 &&\n                <>\n\n                    <div>\n                        <h1>Recommended Artists</h1>\n                    </div>\n\n                    <div className=\"album_grid\">\n                        {tiles}\n                    </div>\n\n                    <div className=\"singles_grid\">\n                        <h2>Top Singles</h2>\n                        {singles}\n                    </div>\n\n                </>\n            }\n            \n\n        </div>\n    )\n}\n\nexport default Home\n","import { useMemo, useContext } from 'react'\nimport { GlobalContext } from '../../context/GlobalState'\nimport TrackTile from '../TrackTile/TrackTile'\nimport \"./Explore.css\"\n\nconst Explore = () => {\n\n    const { tracks, playing } = useContext(GlobalContext)\n    \n    const shuffle = arr => {\n        const array = [...arr]\n\n    \tlet currentIndex = array.length,\n    \t\trandomIndex\n\n    \t// While there remain elements to shuffle...\n    \twhile (0 !== currentIndex) {\n\n    \t\t// Pick a remaining element...\n    \t\trandomIndex = Math.floor(Math.random() * currentIndex)\n    \t\tcurrentIndex--\n\n    \t\t// And swap it with the current element.\n    \t\t[array[currentIndex], array[randomIndex]] = [\n    \t\t\tarray[randomIndex], array[currentIndex]\n    \t\t]\n    \t}\n\n    \treturn array\n    }\n\n    const singlesArr = useMemo(() => {\n\n        const arr = [], shuffled_tracks = shuffle(tracks)\n\n        let index = 0\n\n        for (const t of shuffled_tracks) {\n\n            if (t.type === 'song') { //looking for non podcast tracks\n\n                t.index = index\n\n                index++\n\n                arr.push(t)\n\n            }\n            \n        }\n\n        return arr\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [tracks])\n\n    const singles = singlesArr.map(single => \n        <TrackTile key={single._id} tileHeight=\"12em\" song={single} tilesPerRow={5} playlist={singlesArr} index={single.index} />\n    )\n\n    const playerShowingStyle = {\n        paddingBottom: playing !== 0 ? document.getElementById('play_modal').offsetHeight + 32 : 0\n    }\n\n    return (\n        <div className=\"explore\" style={playerShowingStyle}>\n\n            {tracks.length > 0 &&\n                <>\n\n                    <div>\n                        <h1>Explore</h1>\n                    </div>\n\n                    <div className=\"explore_grid\">\n                        {singles}\n                    </div>\n\n                </>\n            }\n            \n        </div>\n    )\n\n}\n\nexport default Explore\n","import { useMemo, useContext } from 'react'\nimport { GlobalContext } from '../../context/GlobalState'\nimport TrackTile from '../TrackTile/TrackTile'\nimport \"./Podcast.css\"\n\nconst Podcast = () => {\n\n    const { tracks, playing } = useContext(GlobalContext)\n    \n    const shuffle = arr => {\n        const array = [...arr]\n\n    \tlet currentIndex = array.length,\n    \t\trandomIndex\n\n    \t// While there remain elements to shuffle...\n    \twhile (0 !== currentIndex) {\n\n    \t\t// Pick a remaining element...\n    \t\trandomIndex = Math.floor(Math.random() * currentIndex)\n    \t\tcurrentIndex--\n\n    \t\t// And swap it with the current element.\n    \t\t[array[currentIndex], array[randomIndex]] = [\n    \t\t\tarray[randomIndex], array[currentIndex]\n    \t\t]\n    \t}\n\n    \treturn array\n    }\n\n    const podcastsArr = useMemo(() => {\n\n        const arr = [], shuffled_tracks = shuffle(tracks)\n\n        let index = 0\n\n        for (const t of shuffled_tracks) {\n\n            if (t.type === 'podcast') { //looking for non podcast tracks\n\n                t.index = index\n\n                index++\n\n                arr.push(t)\n\n            }\n            \n        }\n\n        return arr\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [tracks])\n\n    const podcasts = podcastsArr.map(single => \n        <TrackTile key={single._id} tileHeight=\"12em\" song={single} tilesPerRow={5} playlist={podcastsArr} index={single.index} />\n    )\n\n    const playerShowingStyle = {\n        paddingBottom: playing !== 0 ? document.getElementById('play_modal').offsetHeight + 32 : 0\n    }\n\n    return (\n        <div className=\"podcast\" style={playerShowingStyle}>\n\n            {tracks.length > 0 &&\n                <>\n\n                    <div>\n                        <h1>Podcasts</h1>\n                    </div>\n\n                    <div className=\"podcast_grid\">\n                        {podcasts}\n                    </div>\n\n                </>\n            }\n            \n        </div>\n    )\n}\n\nexport default Podcast\n","const Library = () => {\n    return (\n        <div>\n            <h1>Library</h1>\n        </div>\n    )\n}\n\nexport default Library\n","export default __webpack_public_path__ + \"static/media/forward.34ceb933.svg\";","export default __webpack_public_path__ + \"static/media/mute.a939919a.svg\";","import { useState, useEffect, useContext } from 'react'\nimport { GlobalContext } from '../../context/GlobalState'\nimport { Range, getTrackBackground } from 'react-range'\nimport './Player.css'\nimport play from '../../assets/icons/play.svg'\nimport pause from '../../assets/icons/pause.svg'\nimport forward from '../../assets/icons/forward.svg'\nimport mute from '../../assets/icons/mute.svg'\n\nconst Player = () => {\n\n\tconst { songs, currentSong, setCurrentSong, playing, setPlaying, setCurrentSongID } = useContext(GlobalContext)\n    const [playback, setPlayback] = useState([0])\n    const [stopped, setStopped] = useState(false)\n    const [songURL, setSongURL] = useState(null)\n    const [max, setMax] = useState(100)\n    const [playerLoaded, setPlayerLoaded] = useState(false)\n    const [volume, setVolume] = useState([1])\n\n    const player = document.getElementById('player')\n\n    const playOnReady = () => {\n\n        setPlayback([0])\n\n        let errors = 0\n\n        const handle_src_error = () => {\n\n            if (errors <= 4) { //attempt to reload the source 5 times before moving to the next track\n                errors++\n                player.load()\n            } else {\n                errors = 0\n                document.getElementById('song_source').removeEventListener(\"error\", handle_src_error)\n                handleForward()\n            }\n\n        }\n\n        document.getElementById('song_source').addEventListener(\"error\", handle_src_error)\n\n        player.load()\n\n        player.oncanplay = () => {\n\n            setPlayerLoaded(true)\n            setMax(player.duration)\n            player.volume = volume[0]\n\n            player.ontimeupdate = () => {\n                setPlayback([player.currentTime])\n            }\n\n            player.onplay = function () {\n                setPlaying(1) //0 not playing, 1 playing, 2 waiting\n            }\n\n            player.onpause = function () {\n                setPlaying(2)\n            }\n\n            player.onended = function () {\n                setPlaying(1) //onend also pauses the song, must be set to play next\n                handleForward()\n            }\n\n            if (playing === 1) {\n                player.play()\n\n                if (\"mediaSession\" in navigator) {\n\n                    navigator.mediaSession.metadata = new window.MediaMetadata({\n                        title: songs[currentSong].name,\n                        artist: songs[currentSong].artist,\n                        artwork: [{\n                            src: songs[currentSong].src,\n                            type: 'image/png'\n                        }]\n                    })\n\n                    const actionHandlers = [\n                        ['previoustrack', () => {\n                            handleBack()\n                        }],\n                        ['nexttrack', () => {\n                            handleForward()\n                        }],\n                        ['stop', () => {\n                            setStopped(true)\n                            if (player.paused) { //check if song is already paused - hook won't fire\n                                setPlaying(0)\n                            }\n                        }]\n                    ]\n\n                    for (const [action, handler] of actionHandlers) {\n                        try {\n                            navigator.mediaSession.setActionHandler(action, handler)\n                        } catch (error) {\n                            console.log(`The media session action \"${action}\" is not supported yet.`)\n                        }\n                    }\n\n                }\n            }\n\n        }\n\n    }\n\n    useEffect(() => {\n\n    \tif (songs !== null) {\n\n            setSongURL(songs[currentSong].song)\n            setCurrentSongID(songs[currentSong]._id)\n\n            playOnReady()\n\n    \t}\n\n    // disable, hook on playOnReady will cause exhaustive loop\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [songs, currentSong])\n\n    useEffect(() => {\n\n        if (stopped && playing !== 1) {\n\n            setPlaying(0)\n            setCurrentSongID(null)\n\n        } else if (playing === 1 && stopped) {\n\n            setStopped(false)\n\n            if (playerLoaded) {\n\n                player.currentTime = 0\n                setPlayback([0])\n\n                if (player.paused) {\n                    player.play()\n                }\n\n            }\n\n        } else if (playing === 1 && !stopped) {\n\n            if (playerLoaded) {\n\n                if (player.paused) {\n                    player.play()\n                }\n\n            }\n\n        } else if (playing === 2 && !stopped) {\n\n            if (playerLoaded) {\n\n                if (!player.paused) {\n                    player.pause()\n                }\n\n            }\n\n        }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [playing])\n\n    const handlePlayPause = () => {\n\n        if (playerLoaded) {\n\n            if (player.paused) {\n                player.play()\n            } else {\n                player.pause()\n            }\n\n        }\n\n    }\n\n    const handlePosition = values => {\n        setPlayback([values[0]])\n        if (playerLoaded) {\n            player.currentTime = values[0]\n        }\n    }\n\n    const handleForward = () => {\n        const new_value = currentSong + 1\n        if (new_value < songs.length) {\n            setCurrentSong(new_value)\n        } else {\n            setCurrentSong(0) //back to first\n            // TODO: make this an optional setting\n        }\n    }\n\n    const handleBack = () => {\n        const new_value = currentSong - 1\n        if (playerLoaded) {\n            if (new_value !== -1 && player.currentTime < 5) {\n                setCurrentSong(new_value)\n            } else {\n                setPlayback([0])\n                player.currentTime = 0\n            }\n        }\n    }\n\n    const returnPosition = inputSeconds => {\n        const minutes = Math.trunc(inputSeconds / 60)\n        let seconds = Math.trunc(inputSeconds % 60)\n\n        if (seconds < 10) seconds = '0' + seconds\n\n        return minutes + ':' + seconds\n    }\n\n    const handleVolume = values => {\n\n        const new_volume = values[0]\n        setVolume([new_volume])\n\n        if (playerLoaded) {\n\n            if (new_volume > 0 && player.muted) {\n                player.muted = false\n            }\n\n            player.volume = new_volume\n\n        }\n\n    }\n\n    const handleMuted = () => {\n        if (playerLoaded) {\n\n            if (player.muted) {\n                setVolume([player.volume]) //the player will be unmuted in this call\n            } else {\n                setVolume([0]) //the player will be muted in this call\n            }\n\n            player.muted = !player.muted\n\n        }\n    }\n\n    const modalControl = {\n        display: playing === 0 ? 'none' : 'flex'\n    }\n\n    const mediaButton = playing === 1 ? pause : play\n\n    return (\n        <>\n\n            <div id='play_modal' className='play_modal' style={modalControl}>\n\n                {songs &&\n                    <div className='song_data'>\n                        <img src={songs[currentSong].src} alt=\"\" ></img>\n                        <div>\n                            <b>{songs[currentSong].name}</b>\n                            <p>{songs[currentSong].artist}</p>\n                        </div>\n                    </div>\n                }\n\n                <div className='controls_wrapper'>\n\n                    <div className='main_control'>\n                        <button onClick={handleBack}><img src={forward} alt=\"\" ></img></button>\n                        <button onClick={handlePlayPause}><img src={mediaButton} alt=\"\" ></img></button>\n                        <button onClick={handleForward}><img src={forward} alt=\"\" ></img></button>\n                    </div>\n\n                    <div>\n\n                        <div className='time_tracker'>\n                            {returnPosition(playback[0])}\n                        </div>\n\n                        <Range\n\n                            values={playback}\n\n                            step={0.001}\n                            min={0}\n                            max={max}\n\n                            onChange={handlePosition}\n\n                            renderTrack={({ props, children }) => (\n\n                                <div\n                                    onMouseDown={props.onMouseDown}\n                                    onTouchStart={props.onTouchStart}\n\t\t\t\t\t\t\t\t\tclassName={'timebar'}\n                                >\n\n                                    <div\n                                    ref={props.ref}\n                                    style={{\n                                        height: '0.25em',\n                                        width: '100%',\n                                        borderRadius: '4px',\n                                        display: 'inline-block',\n                                        background: getTrackBackground({\n                                            values: playback,\n                                            colors: ['#00C8D4', '#0F141D'],\n                                            min: 0,\n                                            max: max\n                                        }),\n                                        alignSelf: 'center'\n                                    }}\n                                    >\n                                        {children}\n\n                                    </div>\n\n                                </div>\n\n                            )}\n\n                            renderThumb={({ props, isDragged }) => (\n\n                                <div\n                                    {...props}\n                                    style={{\n                                        ...props.style,\n                                        height: '0.75em',\n                                        width: '0.75em',\n                                        borderRadius: '13px',\n                                        backgroundColor: isDragged ? '#00C8D4' : '#00C8D4',\n                                        display: 'flex',\n                                        justifyContent: 'center',\n                                        alignItems: 'center'\n                                    }}\n                                >\n\n                                </div>\n\n                            )}\n                        />\n\n                        <div className='time_tracker'>\n                            {returnPosition(max)}\n                        </div>\n\n                    </div>\n\n                </div>\n\n                <div className='volume_control'>\n\n                    <button className='mute_button' onClick={handleMuted}><img src={mute} alt=\"\" ></img></button>\n\n                    <Range\n\n                    values={volume}\n\n                    step={0.01}\n                    min={0}\n                    max={1}\n\n                    onChange={handleVolume}\n\n                    renderTrack={({ props, children }) => (\n\n                        <div\n                            onMouseDown={props.onMouseDown}\n                            onTouchStart={props.onTouchStart}\n                            style={{\n                                ...props.style,\n                                height: '0.25em',\n                                display: 'flex',\n                                width: '5em'\n                            }}\n                        >\n\n                            <div\n                            ref={props.ref}\n                            style={{\n                                height: '0.25em',\n                                width: '100%',\n                                borderRadius: '4px',\n                                background: getTrackBackground({\n                                    values: volume,\n                                    colors: ['#00C8D4', '#0F141D'],\n                                    min: 0,\n                                    max: 1\n                                }),\n                                alignSelf: 'center'\n                            }}\n                            >\n                                {children}\n\n                            </div>\n\n                        </div>\n\n                    )}\n\n                    renderThumb={({ props }) => (\n\n                        <div\n                            {...props}\n                            style={{\n                                ...props.style,\n                                display: 'none'\n                            }}\n                        >\n\n                        </div>\n\n                    )}\n                    />\n\n                </div>\n\n            </div>\n\n            <video style={{display: 'none'}} id='player'>\n                <source id=\"song_source\" src={songURL} type=\"video/mp4\"/>\n            </video>\n\n        </>\n    )\n}\n\nexport default Player\n","export default __webpack_public_path__ + \"static/media/music-pass.61a16a6a.png\";","export default __webpack_public_path__ + \"static/media/golden-pass.86ef5316.png\";","import \"./MusicPass.css\"\nimport pass from '../../assets/music-pass.png'\nimport goldenPass from '../../assets/golden-pass.png'\n\n\n\nconst MusicPass = () => {\n    return (\n        <div className=\"page-wrapper\">\n            <h1>Buy Music Pass</h1>\n            <h3>Enjoy free music listening, exclusive content and more.</h3>\n\n            <div className=\"container\">\n              <div className=\"card-container\">\n                <img className=\"music-pass\" src={pass} alt=\"\" />\n                <p>All access pass</p>\n                <p className=\"small\">Recharge your pass as much as you want.</p>\n                <h5>200/200 left</h5>\n                <button className=\"btn-buy\">Coming soon</button>\n              </div>\n              <div className=\"card-container\">\n                <img className=\"golden-pass\" src={goldenPass} alt=\"\" />\n                <p>Lifetime pass</p>\n                <p className=\"small\">Listen to every song, forever without limits.</p>\n                <h5>50/50 left</h5>\n                <button className=\"btn-buy\">Coming soon</button>\n              </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MusicPass\n","import \"./MyPass.css\"\n\nconst MusicPass = () => {\n    return (\n        <div className=\"page-wrapper\">\n            <h1>My Music Pass</h1>\n            <h3>Manage and top-up your Music Pass.</h3>\n\n            <div className=\"container\">\n              <div className=\"input-group\">\n                <p>Balance:</p>\n                <input type=\"number\" placeholder=\"Top up amount\" />\n                <button className=\"btn-buy\">TOPUP</button>\n                <button className=\"btn-buy btn-outline\">Buy more ISLA</button>\n              </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MusicPass\n","import { useMemo, useEffect, useContext } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { useQuery } from 'urql'\n\nimport { GlobalContext } from './context/GlobalState'\nimport utils from './utils'\n\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport Home from \"./components/Home/Home\";\nimport Explore from \"./components/Explore/Explore\";\nimport Podcast from \"./components/Podcast/Podcast\";\nimport Library from \"./components/Library\";\nimport Player from \"./components/Player/Player\";\nimport MusicPass from \"./components/MusicPass/MusicPass\";\nimport MyPass from \"./components/MyPass/MyPass\";\nimport ArtistView from \"./components/ArtistView/ArtistView\";\n\nconst App = () => {\n\n\tconst { tracks, addTrack, globalArtistModalData } = useContext(GlobalContext)\n\n    const TracksQuery = `\n      query {\n        tracks {\n            id,\n            artist {\n                name\n            },\n\t\t\talbum,\n            metadata,\n            image,\n            title\n        }\n        podcasts {\n            id,\n            artist,\n            metadata,\n            image,\n            title\n        }\n      }\n    `;\n\n    const [result] = useQuery({\n        query: TracksQuery,\n    })\n\n    const {\n        data,\n        fetching,\n        error\n    } = result\n\n    useEffect(() => {\n\n        if (data) {\n\n\t\t\tconsole.log('tracks', data)\n\n            const process_track = (track, type) => {\n                if (!utils.containsID(track.id, tracks)) {\n\n                    let uri = track.metadata,\n                        ipfs = false,\n                        fetch_metadata = true\n\n                    if (track.image) {\n\n                        fetch_metadata = false\n\n                        if (track.metadata) {\n\n                            const ready_track = {\n                                _id: track.id,\n                                name: track.title,\n                                src: track.image,\n                                song: track.metadata,\n                                type: type\n                            }\n\n                            if (typeof track.artist === 'object') {\n                                ready_track.artist = track.artist.name\n                            } else {\n                                ready_track.artist = track.artist\n                            }\n\n                            if (track.album) {\n                                ready_track.album = track.album\n                            }\n\n                            if (!utils.containsExactObject(ready_track, tracks)) {\n                                addTrack(ready_track)\n                            }\n\n                        }\n\n                    }\n\n                    if (fetch_metadata) {\n\n                        if (uri) {\n\n                            if (uri.indexOf('ipfs') > -1) {\n                                uri = 'https://ipfs.io/' + track.metadata\n                                ipfs = true\n                            }\n\n                            fetch(uri)\n                                .then(response => response.json())\n                                .then(d => {\n\n                                    let image = d.image,\n                                        song = d.animation_url\n\n                                    if (ipfs) {\n                                        image = utils.format_src(d.image)\n                                        song = utils.format_src(d.animation_url)\n                                    }\n\n                                    const ready_track = {\n                                        _id: track.id,\n                                        name: d.name,\n                                        src: image,\n                                        song: song,\n                                        type: type\n                                    }\n\n                                    if (typeof track.artist === 'object') {\n                                        ready_track.artist = track.artist.name\n                                    } else {\n                                        ready_track.artist = track.artist\n                                    }\n\n                                    if (track.album) {\n                                        ready_track.album = track.album\n                                    }\n\n                                    if (!utils.containsExactObject(ready_track, tracks)) {\n                                        addTrack(ready_track)\n                                    }\n\n                                })\n                                .catch(\n                                    e => {\n                                        console.error(e)\n                                    }\n                                )\n\n                        }\n\n                    }\n\n                }\n\n            }\n\n            for (const track of data.tracks) {\n                process_track(track, 'song')\n            }\n\n            for (const track of data.podcasts) {\n                process_track(track, 'podcast')\n            }\n\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [data])\n\n    const globalArtistView = useMemo(() => {\n\n        if (globalArtistModalData) {\n            return <ArtistView metadata={globalArtistModalData} style={{display: 'none'}} global={true} />\n        }\n\n        return null\n\n    }, [globalArtistModalData])\n\n\treturn (\n\t\t<Router>\n\t\t\t<div className=\"app\">\n\n\t\t\t\t<Sidebar />\n\n\t\t\t\t<div style={contentStyle}>\n\n\t\t\t\t\t<Navbar />\n\n\t\t\t\t\t{fetching &&\n\t\t\t\t\t\t<p style={textStyle}>Loading...</p>\n\t\t\t\t\t}\n\n\t\t\t\t\t{error &&\n\t\t\t\t\t\t<p style={textStyle}>Failed to load tracks, please try again.</p>\n\t\t\t\t\t}\n\n\t\t\t\t\t<Route path='/app' exact component={Home} />\n\t\t\t\t\t<Route path='/explore' component={Explore} />\n\t\t\t\t\t<Route path='/podcast' component={Podcast} />\n\t\t\t\t\t<Route path='/library' component={Library} />\n\t\t\t\t\t<Route path='/musicPass' component={MusicPass} />\n\t\t\t\t\t<Route path='/myPass' component={MyPass} />\n\n                    {globalArtistView}\n\n\t\t\t\t</div>\n\n                <Player />\n\n\t\t\t</div>\n\t\t</Router>\n\t)\n}\n\nconst contentStyle = {\n    width: \"100%\",\n    height: \"100%\",\n}\n\nconst textStyle = {\n    width: \"100%\",\n    paddingTop: '1em',\n    paddingLeft: '0.75em'\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GlobalProvider } from './context/GlobalState'\nimport { createClient, Provider } from 'urql'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst client = new createClient({\n\turl: 'https://api.thegraph.com/subgraphs/name/defiville/pirate-radio-tracks'\n})\n\nReactDOM.render( \n\n\t<React.StrictMode>\n\t\t<GlobalProvider>\n\t\t\t<Provider value={client}>\n\t\t\t\t<App/>\n\t\t\t</Provider>\n\t\t</GlobalProvider>\n\t</React.StrictMode>,\n\n\tdocument.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}