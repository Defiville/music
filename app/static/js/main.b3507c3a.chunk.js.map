{"version":3,"sources":["context/AppReducer.js","context/GlobalState.js","utils.js","assets/icons/back-arrow.svg","assets/icons/play.svg","assets/icons/pause.svg","components/TrackTile/TrackTile.js","components/ArtistView/ArtistView.js","components/ArtistTile/ArtistTile.js","components/Navbar/SearchView/SearchView.js","assets/icons/user.svg","assets/icons/times.svg","components/Navbar/WalletConnect.js","assets/icons/magnify.svg","components/Navbar/Navbar.js","assets/icons/home.svg","assets/icons/home-focus.svg","assets/icons/explore.svg","assets/icons/explore-focus.svg","assets/icons/podcast.svg","assets/icons/podcast-focus.svg","assets/icons/library.svg","assets/icons/library-focus.svg","components/Sidebar/SideButton.js","assets/logo.svg","components/Sidebar/Sidebar.js","components/Home/Home.js","components/Explore/Explore.js","components/Podcast/Podcast.js","assets/icons/forward.svg","assets/icons/mute.svg","components/Player/Player.js","assets/music-pass.png","assets/golden-pass.png","components/MusicPass/MusicPass.js","components/MyPass/MyPass.js","App.js","reportWebVitals.js","index.js"],"names":["reducer","state","action","type","provider","payload","songs","currentSong","currentSongID","playing","tracks","searchString","globalArtistModalData","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","value","setProvider","setSongs","setCurrentSong","setCurrentSongID","setPlaying","addTrack","setSearchString","setGlobalArtistModalData","Provider","utils","format_src","src","substring","length","containsExactObject","obj","list","i","_","isEqual","containsID","id","_id","Styles","containerWidth","tilesPerRow","StyleSheet","create","tileContainer","width","display","flexDirection","justifyContent","alignItems","undefined","marginBottom","paddingRight","details","marginLeft","marginTop","textAlign","TrackTile","tileHeight","song","playlist","index","useContext","useState","hover","setHover","tileStyle","height","position","cursor","imgStyle","zIndex","opacity","btnStyle","Number","indexOf","backgroundColor","padding","titleStyle","detailsStyle","image_src","pause","play","styles","className","css","style","onClick","e","stopPropagation","alt","onMouseOver","onMouseLeave","onMouseEnter","name","color","artist","AlbumView","onClose","metadata","global","contentTop","setContentTop","useEffect","handleResize","document","getElementById","offsetHeight","window","addEventListener","removeEventListener","handlePlay","playBtnStyle","data","useMemo","table_data","img_src","push","title","album","columns","Header","accessor","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","modalStyle","top","backArrow","image","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","Tile","globalOpen","artistView","setArtistView","playingFromArtist","found","tileContStyle","marginRight","SearchView","search_string","searchData","artists","singles","podcasts","prepCompare","string","replace","toUpperCase","prepped_search_str","t","single_comp_str","single","Object","keys","key","ArtistTile","podcast","balanceSpanStyle","border","borderRadius","tempButtonStyle","userSVGStyle","WalletConnect","walletNotConnectedText","ethFetchingText","wrongNetworkText","walletConnectText","setWalletConnectText","ETHBalance","setETHBalance","checkTimer","setCheckTimer","checking","setChecking","providerOptions","walletconnect","description","package","WalletConnectProvider","options","infuraId","web3Modal","Web3Modal","network","cacheProvider","theme","background","main","secondary","cachedProvider","ethereum","checkWalletConnection","web3","Web3","recheck","setTimeout","networkVersion","eth","getAccounts","then","accounts","walletString","substr","getBalance","weiBalance","balance","fromWei","toFixed","console","error","pendingWalletConnection","wrongNetwork","connectButtonStyle","connect","res","clearCachedProvider","clearTimeout","user","times","Navbar","magnify","placeholder","onChange","target","to","SideButton","props","location","useLocation","sideSpanStyle","pathname","paddingLeft","svg_map","Home","homeFocus","home","Explore","exploreFocus","explore","Podcast","podcastFocus","Library","libraryFocus","library","textDecoration","text","Sidebar","logo","homeData","latest_tracks","slice","count","tiles","playerShowingStyle","paddingBottom","singlesArr","arr","shuffled_tracks","randomIndex","array","currentIndex","Math","floor","random","shuffle","podcastsArr","Player","playback","setPlayback","stopped","setStopped","songURL","setSongURL","max","setMax","playerLoaded","setPlayerLoaded","volume","setVolume","player","sound","createElement","autoPlay","preloadSound","errors","handle_src_error","load","handleForward","oncanplay","duration","ontimeupdate","currentTime","onplay","onpause","onended","navigator","mediaSession","MediaMetadata","artwork","handleBack","paused","handler","setActionHandler","log","playOnReady","new_value","returnPosition","inputSeconds","minutes","trunc","seconds","modalControl","mediaButton","forward","values","step","min","renderTrack","onMouseDown","onTouchStart","ref","getTrackBackground","colors","alignSelf","renderThumb","isDragged","muted","mute","new_volume","MusicPass","pass","goldenPass","axiosRetry","axios","retries","retryDelay","retryCount","retryCondition","response","status","preloadImage","url","Image","contentStyle","textStyle","paddingTop","App","useQuery","query","result","fetching","process_track","track","uri","ipfs","fetch_metadata","ready_track","get","d","animation_url","catch","globalArtistView","path","exact","component","MyPass","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","client","createClient","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.b3507c3a.chunk.js","sourcesContent":["const reducer = (state, action) => {\n\n\tswitch (action.type) {\n\n\t\tcase 'UPDATE_PROVIDER':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tprovider: action.payload\n\t\t\t};\n\n\t\tcase 'UPDATE_SONGS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsongs: action.payload\n\t\t\t};\n\n\t\tcase 'UPDATE_CURRENT_SONG':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentSong: action.payload\n\t\t\t};\n\n\t\tcase 'UPDATE_CURRENT_SONG_ID':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentSongID: action.payload\n\t\t\t};\n\n\t\tcase 'UPDATE_PLAYING':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tplaying: action.payload\n\t\t\t};\n\n\t\tcase 'ADD_TRACK':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttracks: [...state.tracks, action.payload]\n\t\t\t};\n\n\t\tcase 'UPDATE_SEARCH_STRING':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsearchString: action.payload\n\t\t\t};\n\n\t\tcase 'UPDATE_GLOBAL_ARTIST_MODAL_DATA':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tglobalArtistModalData: action.payload\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\n\t}\n\n}\n\nexport default reducer","import { createContext, useReducer } from 'react'\nimport AppReducer from './AppReducer'\n\n// Initial state\nconst initialState = {\n\tprovider: null,\n\tsongs: null,\n\tcurrentSong: 0,\n\tcurrentSongID: null,\n\tplaying: 0, //0 not playing, 1 playing, 2 waiting\n\ttracks: [],\n\tsearchString: '',\n\tglobalArtistModalData: null\n}\n\n// Create context\nexport const GlobalContext = createContext(initialState)\n\n// Provider component\nexport const GlobalProvider = ({ children }) => {\n\n\tconst [state, dispatch] = useReducer(AppReducer, initialState)\n\n\tfunction setProvider(value) {\n\t\tdispatch({\n\t\t\ttype: 'UPDATE_PROVIDER',\n\t\t\tpayload: value\n\t\t})\n\t}\n\n\tfunction setSongs(value) {\n\t\tdispatch({\n\t\t\ttype: 'UPDATE_SONGS',\n\t\t\tpayload: value\n\t\t})\n\t}\n\n\tfunction setCurrentSong(value) {\n\t\tdispatch({\n\t\t\ttype: 'UPDATE_CURRENT_SONG',\n\t\t\tpayload: value\n\t\t})\n\t}\n\n\tfunction setCurrentSongID(value) {\n\t\tdispatch({\n\t\t\ttype: 'UPDATE_CURRENT_SONG_ID',\n\t\t\tpayload: value\n\t\t})\n\t}\n\n\tfunction setPlaying(value) {\n\t\tdispatch({\n\t\t\ttype: 'UPDATE_PLAYING',\n\t\t\tpayload: value\n\t\t})\n\t}\n\n\tfunction addTrack(value) {\n\t\tdispatch({\n\t\t\ttype: 'ADD_TRACK',\n\t\t\tpayload: value\n\t\t})\n\t}\n\n\tfunction setSearchString(value) {\n\t\tdispatch({\n\t\t\ttype: 'UPDATE_SEARCH_STRING',\n\t\t\tpayload: value\n\t\t})\n\t}\n\n\tfunction setGlobalArtistModalData(value) {\n\t\tdispatch({\n\t\t\ttype: 'UPDATE_GLOBAL_ARTIST_MODAL_DATA',\n\t\t\tpayload: value\n\t\t})\n\t}\n\n\tconst value = {\n\t\tprovider: state.provider,\n\t\tsetProvider,\n\t\tsongs: state.songs,\n\t\tsetSongs,\n\t\tcurrentSong: state.currentSong,\n\t\tsetCurrentSong,\n\t\tcurrentSongID: state.currentSongID,\n\t\tsetCurrentSongID,\n\t\tplaying: state.playing,\n\t\tsetPlaying,\n\t\ttracks: state.tracks,\n\t\taddTrack,\n\t\tsearchString: state.searchString,\n\t\tsetSearchString,\n\t\tglobalArtistModalData: state.globalArtistModalData,\n\t\tsetGlobalArtistModalData\n\t}\n\n\treturn (\n\n\t\t<GlobalContext.Provider value={value}>\n\n\t\t\t{children}\n\n\t\t</GlobalContext.Provider>\n\n\t  )\n\n}","import _ from \"lodash\";\n\nconst format_src = (src) => {\n\treturn \"https://ipfs.io/\" + src.substring(\"ipfs://\".length);\n};\n\nconst containsExactObject = (obj, list) => {\n\tlet i;\n\tfor (i = 0; i < list.length; i++) {\n\t\tif (_.isEqual(obj, list[i])) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n};\n\nconst containsID = (id, list) => {\n\tlet i;\n\tfor (i = 0; i < list.length; i++) {\n\t\tif (id === list[i]._id) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n};\n\nconst utils = {\n\tformat_src,\n\tcontainsExactObject,\n\tcontainsID,\n\t_\n};\n\nexport default utils;\n","export default __webpack_public_path__ + \"static/media/back-arrow.2110c78d.svg\";","export default __webpack_public_path__ + \"static/media/play.171cccd4.svg\";","export default __webpack_public_path__ + \"static/media/pause.62fc3c4c.svg\";","import { useContext, useState } from \"react\";\nimport { StyleSheet, css } from \"aphrodite\";\nimport { GlobalContext } from \"../../context/GlobalState\";\nimport play from \"../../assets/icons/play.svg\";\nimport pause from \"../../assets/icons/pause.svg\";\n\nconst TrackTile = ({\n\ttileHeight,\n\tsong,\n\ttilesPerRow = 2,\n\tplaylist,\n\tindex = 0\n}) => {\n\tconst { setSongs, setCurrentSong, setPlaying, playing, currentSongID } =\n\t\tuseContext(GlobalContext);\n\n\tconst [hover, setHover] = useState(false);\n\n\tconst containerWidth = 100 / tilesPerRow + \"%\";\n\n\tconst tileStyle = {\n\t\theight: tileHeight,\n\t\twidth: tileHeight,\n\t\tposition: \"relative\",\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"center\",\n\t\talignItems: \"center\",\n\t\tcursor: \"pointer\"\n\t};\n\n\tconst imgStyle = {\n\t\theight: \"100%\",\n\t\twidth: \"100%\",\n\t\tposition: \"relative\",\n\t\tzIndex: \"0\",\n\t\topacity: hover ? \"0.75\" : \"1\"\n\t};\n\n\tconst btnHeight =\n\t\tNumber(tileHeight.substring(0, tileHeight.indexOf(\"em\"))) * 0.25 + \"em\"; //button height is made 25% of tile height\n\n\tconst btnStyle = {\n\t\theight: btnHeight,\n\t\tbackgroundColor: \"transparent\",\n\t\tpadding: 0,\n\t\tposition: \"absolute\",\n\t\tzIndex: \"1\",\n\t\tcursor: \"pointer\"\n\t};\n\n\tconst playSVGStyle = {\n\t\theight: \"100%\",\n\t\twidth: \"auto\"\n\t};\n\n\tconst nameStyle = {\n\t\tcolor: \"#62728E\"\n\t};\n\n\tconst titleStyle = {};\n\n\tif (tilesPerRow > 2) {\n\t\ttitleStyle.marginBottom = \"0.5em\";\n\t}\n\n\tconst detailsStyle = {\n\t\tmarginLeft: \"1em\"\n\t};\n\n\tif (tilesPerRow > 2) {\n\t\tdetailsStyle.marginLeft = 0;\n\t\tdetailsStyle.marginTop = \"1em\";\n\t}\n\n\tconst handlePlay = (e) => {\n\t\te.stopPropagation(); //stops ArtistView from opening if play is clicked\n\n\t\tif (playing === 2 && currentSongID === song._id) {\n\t\t\tsetPlaying(1); //resumes the song in the player\n\t\t} else if (playing === 1 && currentSongID === song._id) {\n\t\t\tsetPlaying(2); //pauses the song in the player\n\t\t} else {\n\t\t\tsetPlaying(1);\n\t\t\tsetCurrentSong(index); //default to first\n\t\t\tif (playlist) {\n\t\t\t\tsetSongs(playlist);\n\t\t\t} else {\n\t\t\t\tsetSongs([song]);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst image_src =\n\t\tplaying === 1 && currentSongID === song._id ? pause : play;\n\n\tconst styles = Styles(containerWidth, tilesPerRow);\n\n\treturn (\n\t\t<div className={css(styles.tileContainer)}>\n\t\t\t<div style={tileStyle} onClick={handlePlay}>\n\t\t\t\t<img\n\t\t\t\t\tstyle={imgStyle}\n\t\t\t\t\tsrc={song.src}\n\t\t\t\t\talt=\"\"\n\t\t\t\t\tonMouseOver={() => setHover(true)}\n\t\t\t\t\tonMouseLeave={() => setHover(false)}\n\t\t\t\t/>\n\t\t\t\t{hover && (\n\t\t\t\t\t<div style={btnStyle} onMouseEnter={() => setHover(true)}>\n\t\t\t\t\t\t<img style={playSVGStyle} src={image_src} alt=\"\" />\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div className={css(styles.details)}>\n\t\t\t\t<p style={titleStyle}>{song.name}</p>\n\t\t\t\t<p style={nameStyle}>{song.artist}</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst Styles = (containerWidth, tilesPerRow) => {\n\treturn StyleSheet.create({\n\t\ttileContainer: {\n\t\t\twidth: containerWidth,\n\t\t\tdisplay: \"flex\",\n\t\t\tflexDirection: tilesPerRow > 2 ? \"column\" : \"row\",\n\t\t\tjustifyContent: \"flex-start\",\n\t\t\talignItems: tilesPerRow > 2 ? undefined : \"center\",\n\t\t\tmarginBottom: tilesPerRow > 2 ? \"2em\" : \"1em\",\n\t\t\tpaddingRight: \"2em\",\n\t\t\t\"@media (max-width: 768px)\": {\n\t\t\t\twidth: \"50%\",\n\t\t\t\tflexDirection: \"column\",\n\t\t\t\talignItems: \"center\",\n\t\t\t\tmarginBottom: \"2em\",\n\t\t\t\tpaddingRight: 0\n\t\t\t}\n\t\t},\n\t\tdetails: {\n\t\t\tmarginLeft: tilesPerRow > 2 ? 0 : \"1em\",\n\t\t\tmarginTop: tilesPerRow > 2 ? \"1em\" : 0,\n\t\t\t\"@media (max-width: 768px)\": {\n\t\t\t\tmarginLeft: 0\n\t\t\t},\n\t\t\t\":nth-child(n) > p\": {\n\t\t\t\t\"@media (max-width: 768px)\": {\n\t\t\t\t\ttextAlign: \"center\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n};\n\nexport default TrackTile;\n","import { useContext, useEffect, useState, useMemo } from 'react'\nimport { GlobalContext } from '../../context/GlobalState'\nimport { useTable } from 'react-table'\nimport play from '../../assets/icons/play.svg'\nimport pause from '../../assets/icons/pause.svg'\nimport backArrow from '../../assets/icons/back-arrow.svg'\nimport \"./ArtistView.css\"\n\nconst AlbumView = ({ onClose, metadata, global = false }) => {\n\n\tconst { setSongs, setCurrentSong, playing, setPlaying, currentSongID, setGlobalArtistModalData } = useContext(GlobalContext)\n    const [contentTop, setContentTop] = useState('auto')\n\n    useEffect(() => {\n\n        const handleResize = () => {\n            setContentTop(document.getElementById('navbar').offsetHeight)\n        }\n\n        window.addEventListener('resize', handleResize)\n        handleResize()\n\n        return () => {\n            window.removeEventListener('resize', handleResize)\n        }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const handlePlay = i => {\n\n        if (playing === 2 && currentSongID === metadata.songs[i]._id) {\n            setPlaying(1) //resumes the song in the player\n        } else if (playing === 1 && currentSongID === metadata.songs[i]._id) {\n            setPlaying(2) //pauses the song in the player\n        } else {\n            setPlaying(1)\n            setCurrentSong(i)\n            setSongs(metadata.songs)\n        }\n\n    }\n\n    const checkClose = () => {\n\n        if (global) {\n            return setGlobalArtistModalData(null)\n        } else {\n            onClose()\n        }\n\n    }\n\n    const playBtnStyle = {\n\t\topacity: 0.5,\n        padding: 0,\n        backgroundColor: 'transparent'\n    }\n\n    const data = useMemo(\n\n    \t() => {\n\n            const table_data = []\n\n            for (let i = 0; i < metadata.songs.length; i++) {\n\n                const img_src = playing === 1 && currentSongID === metadata.songs[i]._id ? pause : play\n\n                table_data.push({\n                    play: <button style={playBtnStyle} onClick={() => handlePlay(i)}><img src={img_src} alt=\"\" width=\"12px\" ></img></button>,\n                    title: metadata.songs[i].name,\n                    artist: metadata.songs[i].artist,\n                    album: metadata.songs[i].album,\n                    // duration: metadata.songs[i].duration,\n                    // genre: metadata.genre,\n                    // price: metadata.songs[i].price\n                })\n        \n            }\n\n            return table_data\n            \n        },\n    \t// eslint-disable-next-line react-hooks/exhaustive-deps\n    \t[currentSongID, playing]\n\n    ) //table data declaration\n\n    const columns = useMemo(\n        () => [{\n                Header: '',\n                accessor: 'play', // accessor is the \"key\" in the data\n            }, {\n                Header: 'SONG TITLE',\n                accessor: 'title',\n            },\n            {\n                Header: 'ARTIST',\n                accessor: 'artist',\n            },\n            {\n                Header: 'ALBUM',\n                accessor: 'album',\n            },\n            // {\n            // \tHeader: 'DURATION',\n            // \taccessor: 'duration',\n            // },\n            // {\n            // \tHeader: 'GENRE',\n            // \taccessor: 'genre',\n            // },\n            // {\n            // \tHeader: 'PRICE',\n            // \taccessor: 'price',\n            // }\n        ],\n        []\n    ) //table header-key relationship\n\n    const {\n    \tgetTableProps,\n    \tgetTableBodyProps,\n    \theaderGroups,\n    \trows,\n    \tprepareRow\n    } = useTable({\n    \tcolumns,\n    \tdata\n    })\n\n    const modalStyle = {\n        top: contentTop\n    }\n\n    return (\n        <div className=\"modal\" style={modalStyle}>\n\n            <div className=\"modal_header\">\n                <button className=\"close_btn\" onClick={checkClose}><img src={backArrow} alt=\"\" />Back</button>\n            </div>\n\n            <div className=\"modal_content\">\n\n                <img className=\"image\" src={metadata.image} alt=\"\" />\n\n                <div className=\"info\">\n                    <h2>{metadata.name}</h2>\n                    <h3>{metadata.artist}</h3>\n                    {/* <span>{metadata.genre} {metadata.year}</span> */}\n                    <button onClick={() => handlePlay(0)}>\n                        <img src={play} alt=\"\" />\n                        Play all\n                    </button>\n                </div>\n\n                <table {...getTableProps()} className=\"table\">\n\n                    <thead>\n\n                        {headerGroups.map(headerGroup => (\n                            <tr {...headerGroup.getHeaderGroupProps()}>\n                                {headerGroup.headers.map(column => (\n                                <th\n                                {...column.getHeaderProps()}\n                                >\n                                {column.render('Header')}\n                                </th>\n                                ))}\n                            </tr>\n                        ))}\n\n                    </thead>\n\n                    <tbody {...getTableBodyProps()}>\n\n                        {rows.map(row => {\n\n                            prepareRow(row)\n\n                            return (\n                                <tr {...row.getRowProps()}>\n                                    {row.cells.map(cell => {\n                                    return (\n                                    <td\n                                    {...cell.getCellProps()}\n                                    >\n                                    {cell.render('Cell')}\n                                    </td>\n                                    )\n                                    })}\n                                </tr>\n                            )\n\n                        })}\n\n                    </tbody>\n\n                </table>\n\n            </div>\n\n        </div>\n    )\n\n}\n\nexport default AlbumView\n","import { useContext, useState, useMemo } from 'react'\nimport { GlobalContext } from '../../context/GlobalState'\nimport play from '../../assets/icons/play.svg'\nimport pause from '../../assets/icons/pause.svg'\nimport ArtistView from '../ArtistView/ArtistView'\n\nconst Tile = ({ tileHeight = '14em', data, globalOpen = false }) => {\n\n\tconst { setSongs, setCurrentSong, setPlaying, playing, currentSongID, setSearchString, setGlobalArtistModalData } = useContext(GlobalContext)\n\n    const [hover, setHover] = useState(false)\n    const [artistView, setArtistView] = useState(false)\n\n    const playingFromArtist = useMemo(() => {\n\n        let found = false\n\n        for (const song of data.songs) {\n            if (song._id === currentSongID) {\n                found = true\n            }\n        }\n\n        return found\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentSongID])\n\n    const tileContStyle = {\n        width: tileHeight,\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginRight: \"2em\",\n\t\tcursor: \"pointer\"\n    }\n\n    const tileStyle = {\n        height: tileHeight,\n        width: tileHeight,\n        position: \"relative\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginBottom: \"0.5em\"\n    }\n\n    const imgStyle = {\n        height: \"100%\",\n        width: \"100%\",\n        position: \"relative\",\n        zIndex: \"0\",\n        opacity: hover ? '0.75' : '1'\n    }\n\n    const btnHeight = Number(tileHeight.substring(0, tileHeight.indexOf('em'))) * 0.25 + 'em' //button height is made 25% of tile height\n\n    const btnStyle = {\n        height: btnHeight,\n        backgroundColor: \"transparent\",\n        padding: 0,\n        position: \"absolute\",\n        zIndex: \"1\",\n        cursor: \"pointer\"\n    }\n\n    const playSVGStyle = {\n        height: \"100%\",\n        width: 'auto'\n    }\n\n    const nameStyle = {\n        color: \"#62728E\",\n        textAlign: \"center\"\n    }\n\n    const handlePlay = e => {\n        \n        e.stopPropagation() //stops ArtistView from opening if play is clicked\n\n        if (playing === 2 && playingFromArtist) {\n            setPlaying(1) //resumes the song in the player\n        } else if (playing === 1 && playingFromArtist) {\n            setPlaying(2) //pauses the song in the player\n        } else {\n            setPlaying(1)\n            setCurrentSong(0) //first song in list\n            setSongs(data.songs)\n        }\n        \n    }\n\n    const openAlbum = () => {\n\n        setHover(false)\n\n        if (globalOpen) {\n\n            setSearchString('')\n            setGlobalArtistModalData(data)\n\n        } else {\n            \n            if (!artistView) {\n                setArtistView(true)\n            }\n\n        }\n\n    }\n\n    const closeAlbum = () => {\n        if (!globalOpen) {\n            \n            if (artistView) {\n                setArtistView(false)\n            }\n            \n        }   \n    }\n\n    const image_src = playing === 1 && playingFromArtist ? pause : play\n\n    return (\n        <div style={tileContStyle}>\n            <div style={tileStyle} onClick={openAlbum}>\n                <img style={imgStyle} src={data.image} alt=\"\" onMouseOver={() => setHover(true)} onMouseLeave={() => setHover(false)} />\n                {hover &&\n                    <div style={btnStyle} onMouseEnter={() => setHover(true)}>\n                        <img style={playSVGStyle} src={image_src} alt=\"\" onClick={handlePlay} />\n                    </div>\n                }\n                {artistView &&\n                    <ArtistView onClose={closeAlbum} metadata={data}/>\n                }\n            </div>\n            <p style={nameStyle}>{data.name}</p>\n        </div>\n    )\n\n}\n\nexport default Tile\n","import { useEffect, useState, useMemo, useContext } from 'react'\nimport { GlobalContext } from '../../../context/GlobalState'\nimport utils from '../../../utils'\nimport backArrow from '../../../assets/icons/back-arrow.svg'\nimport TrackTile from '../../TrackTile/TrackTile'\nimport ArtistTile from '../../ArtistTile/ArtistTile'\nimport \"./SearchView.css\"\n\nconst SearchView = ({ search_string }) => {\n\n    const { tracks, setSearchString } = useContext(GlobalContext)\n\n    const [contentTop, setContentTop] = useState('auto')\n\n    const searchData = useMemo(() => {\n\n        const obj = {\n            artists: {},\n            singles: [],\n            podcasts: []\n        }\n\n        const prepCompare = string => {\n            if (!string) {\n                return string\n            }\n            string = string.replace('-', '')\n            string = string.replace('.', '')\n            string = string.toUpperCase()\n            return string\n        }\n\n        if (search_string.length > 1) { //only starts searching when more than 1 char has been entered\n\n            const prepped_search_str = prepCompare(search_string)\n    \n            for (const t of tracks) {\n\n                if (!t.artist) {\n                    t.artist = 'Unknown'\n                }\n    \n                const artist_comp_str = prepCompare(t.artist)\n        \n                if (artist_comp_str.indexOf(prepped_search_str) > -1) {\n        \n                    if (t.artist in obj.artists) {\n            \n                        if (!utils.containsExactObject(t, obj.artists[t.artist].songs)) {\n                            obj.artists[t.artist].songs.push(t)\n                        }\n            \n                    } else { //first song for artist\n            \n                        obj.artists[t.artist] = {\n                            name: t.artist,\n                            image: t.src, //using first song's image as artist's\n                            songs: [t]\n                        }\n            \n                    }\n                    \n                }\n    \n                const single_comp_str = prepCompare(t.name)\n        \n                if (single_comp_str.indexOf(prepped_search_str) > -1 && t.type === 'song') {\n                    obj.singles.push(t)\n                }\n        \n                if (single_comp_str.indexOf(prepped_search_str) > -1 && t.type === 'podcast') {\n                    obj.podcasts.push(t)\n                }\n                \n            }\n            \n        }\n\n        return obj\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [search_string, tracks])\n\n    useEffect(() => {\n\n        const handleResize = () => {\n            setContentTop(document.getElementById('navbar').offsetHeight)\n        }\n\n        window.addEventListener('resize', handleResize)\n        handleResize()\n\n        return () => {\n            window.removeEventListener('resize', handleResize)\n        }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const closeModal = () => {\n        setSearchString('')\n    }\n\n    const modalStyle = {\n        top: contentTop\n    }\n\n    const singles = searchData.singles.map(single => \n        <TrackTile key={single._id} tileHeight=\"5em\" song={single} />\n    )\n\n    const artists = Object.keys(searchData.artists).map(key => \n        <ArtistTile key={key} tileHeight=\"10em\" data={searchData.artists[key]} globalOpen={true} />\n    )\n\n    const podcasts = searchData.podcasts.map(podcast => \n        <TrackTile key={podcast._id} tileHeight=\"5em\" song={podcast} />\n    )\n\n    return (\n        <div className=\"search_modal\" style={modalStyle}>\n\n            <div className=\"search_modal_header\">\n                <button className=\"close_btn\" onClick={closeModal}><img src={backArrow} alt=\"\" />Back</button>\n            </div>\n\n            <div className=\"search_modal_content\">\n                <h3>Search Results</h3>\n\n                <div className=\"singles_grid\">\n                    { searchData.singles.length > 0 &&\n                        <>\n                            <h2>Songs</h2>\n                            {singles}\n                        </>\n                    }\n                    { !!Object.keys(searchData.artists).length > 0 &&\n                        <>\n                            <h2>Artists</h2>\n                            {artists}\n                        </>\n                    }\n                    { searchData.podcasts.length > 0 &&\n                        <>\n                            <h2>Podcasts</h2>\n                            {podcasts}\n                        </>\n                    }\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default SearchView\n","export default __webpack_public_path__ + \"static/media/user.126de776.svg\";","export default __webpack_public_path__ + \"static/media/times.82a5f87a.svg\";","import { useState, useEffect, useContext } from 'react'\nimport { GlobalContext } from '../../context/GlobalState'\nimport Web3 from 'web3'\nimport Web3Modal from 'web3modal'\nimport WalletConnectProvider from '@walletconnect/web3-provider'\nimport user from '../../assets/icons/user.svg'\nimport times from '../../assets/icons/times.svg'\n\nconst WalletConnect = () => {\n\n\tconst { provider, setProvider } = useContext(GlobalContext)\n\n\tconst walletNotConnectedText = 'Connect Wallet',\n\t\tethFetchingText = 'Fetching...',\n\t\twrongNetworkText = 'Wrong Network'\n\n    const [walletConnectText, setWalletConnectText] = useState(walletNotConnectedText)\n    const [ETHBalance, setETHBalance] = useState(ethFetchingText)\n    const [checkTimer, setCheckTimer] = useState(null)\n    const [checking, setChecking] = useState(false)\n\n    const providerOptions = {\n    \twalletconnect: {\n    \t\tdisplay: {\n    \t\t\tname: \"WalletConnect\",\n    \t\t\tdescription: \"Scan the QR code with your mobile wallet to connect.\"\n    \t\t},\n    \t\tpackage: WalletConnectProvider,\n    \t\toptions: {\n    \t\t\tinfuraId: \"c91abd5028e84b1c9001abd007b3e258\" // required\n    \t\t}\n    \t}\n    }\n\n    const web3Modal = new Web3Modal({\n    \tnetwork: \"mainnet\", // optional\n    \tcacheProvider: true, // optional\n    \tproviderOptions, // required\n    \ttheme: {\n    \t\tbackground: \"rgb(39, 49, 56)\",\n    \t\tmain: \"rgb(199, 199, 199)\",\n    \t\tsecondary: \"rgb(136, 136, 136)\",\n    \t\tborder: \"rgba(195, 195, 195, 0.14)\",\n    \t\thover: \"rgb(16, 26, 32)\"\n    \t}\n    })\n\n    useEffect(() => {\n\n    \tif (web3Modal.cachedProvider === 'injected') {\n    \t\tsetProvider(window.ethereum)\n    \t}\n\n\t// disable hook dependency to use as singular render\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n\tconst checkWalletConnection = () => {\n\n\t\tif (provider) {\n\n\t\t\tconst web3 = new Web3(provider)\n\n\t\t\tconst recheck = () => {\n\t\t\t\tif (!checking) {\n\t\t\t\t\tsetChecking(true)\n\n\t\t\t\t\tsetCheckTimer(\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tsetChecking(false)\n\t\t\t\t\t\t\tcheckWalletConnection()\n\t\t\t\t\t\t}, 1500)\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (provider.networkVersion === '1') { //mainnet\n\n\t\t\t\tweb3.eth.getAccounts().then(\n\t\t\t\t\taccounts => {\n\n\t\t\t\t\t\tif (accounts.length > 0) {\n\n\t\t\t\t\t\t\tconst walletString = accounts[0].substr(0, 4) + '...' + accounts[0].substr(accounts[0].length - 4)\n\n\t\t\t\t\t\t\tsetWalletConnectText(walletString)\n\n\t\t\t\t\t\t\tweb3.eth.getBalance(accounts[0]).then(\n\t\t\t\t\t\t\t\tweiBalance => {\n\t\t\t\t\t\t\t\t\tconst balance = Number(web3.utils.fromWei(weiBalance)).toFixed(3)\n\t\t\t\t\t\t\t\t\tsetETHBalance(balance + ' ETH')\n\t\t\t\t\t\t\t\t\trecheck()\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\te => {\n\t\t\t\t\t\t\t\t\tconsole.error(e)\n\t\t\t\t\t\t\t\t\tsetETHBalance('Failed')\n\t\t\t\t\t\t\t\t\trecheck()\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tsetWalletConnectText(walletNotConnectedText)\n\t\t\t\t\t\t\tsetETHBalance(ethFetchingText)\n\t\t\t\t\t\t\trecheck()\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t},\n\t\t\t\t\te => {\n\t\t\t\t\t\tconsole.error(e)\n\t\t\t\t\t\trecheck()\n\t\t\t\t\t}\n\t\t\t\t)\n\n\t\t\t} else {\n\n\t\t\t\tsetWalletConnectText(wrongNetworkText)\n\t\t\t\tsetETHBalance(ethFetchingText)\n\t\t\t\trecheck()\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n    useEffect(() => {\n\n    \tif (provider === null) {\n    \t\tsetWalletConnectText(walletNotConnectedText)\n    \t\treturn setETHBalance(ethFetchingText)\n    \t}\n\n\t\tcheckWalletConnection()\n\n    \t// eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [provider])\n\n    const promptWallet = () => {\n\n\t\tif (walletConnectText === walletNotConnectedText) {\n\n\t\t\tweb3Modal.connect().then(\n\t\t\t\tres => {\n\n\t\t\t\t\tsetProvider(res)\n\n\t\t\t\t},\n\t\t\t\te => {\n\n\t\t\t\t\tconsole.error(e)\n\n\t\t\t\t\tweb3Modal.clearCachedProvider()\n\t\t\t\t\tsetCheckTimer(clearTimeout(checkTimer))\n\t\t\t\t\tsetChecking(false)\n\t\t\t\t\tsetProvider(null)\n\n\t\t\t\t}\n\t\t\t)\n\n\t\t}\n\n    }\n\n    const logOut = () => {\n\n    \tweb3Modal.clearCachedProvider()\n\t\tsetCheckTimer(clearTimeout(checkTimer))\n\t\tsetChecking(false)\n    \tsetProvider(null)\n\n    }\n\n    const pendingWalletConnection = (walletConnectText === walletNotConnectedText)\n\tconst wrongNetwork = (walletConnectText === wrongNetworkText)\n\n    const connectButtonStyle = {\n    \tbackgroundColor: pendingWalletConnection ? '#00C8D4' : wrongNetwork ? '#FE4141' : '#303847',\n    \tcolor: pendingWalletConnection || wrongNetwork ? \"#FFFFFF\" : \"#62728E\",\n    \tcursor: pendingWalletConnection ? \"pointer\" : \"default\",\n    \tborderRadius: \"8px\"\n    }\n\n    return (\n        <div>\n\n            {!pendingWalletConnection && !wrongNetwork &&\n                <span style={balanceSpanStyle}>{ETHBalance}</span>\n            }\n\n            <button style={connectButtonStyle} onClick={promptWallet}>\n                {!pendingWalletConnection && !wrongNetwork &&\n                    <img style={userSVGStyle} src={user} alt=\"\" />\n                }\n                {walletConnectText}\n            </button>\n\n\t\t\t{!pendingWalletConnection &&\n\t\t\t\t<button style={tempButtonStyle} onClick={logOut}>\n\t\t\t\t\t<img src={times} alt=\"\" />\n\t\t\t\t</button>\n\t\t\t}\n\n        </div>\n    )\n}\n\nconst balanceSpanStyle = {\n    border: \"2px solid #303847\",\n    color: \"#62728E\",\n    padding: \"0.45em 1.5em 0.45em 1em\",\n    borderRadius: \"8px 0 0 8px\",\n    marginRight: \"-0.5em\"\n}\n\nconst tempButtonStyle = {\n    backgroundColor: 'transparent',\n\tcolor: '#FFFFFF',\n\tpaddingRight: 0\n}\n\nconst userSVGStyle = {\n    paddingRight: \"0.5em\",\n    height: \"1em\",\n    width: 'auto'\n}\n\nexport default WalletConnect\n","export default __webpack_public_path__ + \"static/media/magnify.3c1c3235.svg\";","import { useContext } from 'react'\nimport { GlobalContext } from '../../context/GlobalState'\nimport { Link } from 'react-router-dom'\nimport SearchView from './SearchView/SearchView'\nimport WalletConnect from './WalletConnect'\nimport magnify from '../../assets/icons/magnify.svg'\nimport \"./Navbar.css\"\n\nconst Navbar = () => {\n\n    const inputPlaceHolder = 'Search for songs, artists etc.'\n\n    const { searchString, setSearchString } = useContext(GlobalContext)\n\n    return (\n        <div className=\"navbar\" id=\"navbar\">\n\n            <div className=\"search-cont\">\n\n                <img src={magnify} alt=\"\" />\n                <input placeholder={inputPlaceHolder} value={searchString} onChange={e => setSearchString(e.target.value)}></input>\n\n            </div>\n\n            <div className=\"navbar-right\">\n                <Link to='/musicPass' className=\"btn-navbar\" >Music Pass</Link>\n                {/*<Link to='/myPass' className=\"btn-navbar\" >My Pass</Link>*/}\n                <WalletConnect />\n\n            </div>\n\n            { searchString &&\n                <SearchView search_string={searchString} />\n            }\n\n        </div>\n    )\n\n}\n\nexport default Navbar\n","export default __webpack_public_path__ + \"static/media/home.1b76e15b.svg\";","export default __webpack_public_path__ + \"static/media/home-focus.ce32ea31.svg\";","export default __webpack_public_path__ + \"static/media/explore.ffac5b3c.svg\";","export default __webpack_public_path__ + \"static/media/explore-focus.cddb4b9e.svg\";","export default __webpack_public_path__ + \"static/media/podcast.5d382983.svg\";","export default __webpack_public_path__ + \"static/media/podcast-focus.a06cf377.svg\";","export default __webpack_public_path__ + \"static/media/library.3f99650c.svg\";","export default __webpack_public_path__ + \"static/media/library-focus.9b10c597.svg\";","import { Link, useLocation } from 'react-router-dom'\nimport home from '../../assets/icons/home.svg'\nimport homeFocus from '../../assets/icons/home-focus.svg'\nimport explore from '../../assets/icons/explore.svg'\nimport exploreFocus from '../../assets/icons/explore-focus.svg'\nimport podcast from '../../assets/icons/podcast.svg'\nimport podcastFocus from '../../assets/icons/podcast-focus.svg'\nimport library from '../../assets/icons/library.svg'\nimport libraryFocus from '../../assets/icons/library-focus.svg'\nimport \"./Sidebar.css\"\n\nconst SideButton = (props) => {\n    const location = useLocation()\n\n    const sideSpanStyle = {\n        color: location.pathname === props.location ? \"#00C8D4\" : \"#62728E\",\n        paddingLeft: \"5px\"\n    }\n\n    const svg_map = {\n        Home: location.pathname === props.location ? homeFocus : home,\n        Explore: location.pathname === props.location ? exploreFocus : explore,\n        Podcast: location.pathname === props.location ? podcastFocus : podcast,\n        Library: location.pathname === props.location ? libraryFocus : library\n    }\n\n    return (\n        <Link to={props.location} style={{textDecoration: 'none'}}>\n            <div className=\"sideBtnDiv\">\n\n                <img src={svg_map[props.text]} alt=\"\" />\n                <span style={sideSpanStyle}>{props.text}</span>\n\n            </div>\n        </Link>\n    )\n}\n\nexport default SideButton\n","export default __webpack_public_path__ + \"static/media/logo.23731195.svg\";","import SideButton from \"./SideButton\";\nimport \"./Sidebar.css\";\nimport logo from \"../../assets/logo.svg\";\n\nconst Sidebar = () => {\n\treturn (\n\t\t<div className=\"sidebar-wrapper\">\n\t\t\t<img className=\"logo\" src={logo} alt=\"\" />\n\t\t\t<div className=\"sidebar\">\n\t\t\t\t<SideButton text=\"Home\" location=\"/app\" />\n\t\t\t\t<SideButton text=\"Explore\" location=\"/explore\" />\n\t\t\t\t<SideButton text=\"Podcast\" location=\"/podcast\" />\n\t\t\t\t{/* <SideButton text=\"Library\" location=\"/library\"/> */}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Sidebar;\n","import { useMemo, useContext } from 'react'\nimport { GlobalContext } from '../../context/GlobalState'\nimport utils from '../../utils'\nimport ArtistTile from '../ArtistTile/ArtistTile'\nimport TrackTile from '../TrackTile/TrackTile'\nimport \"./Home.css\"\n\nconst Home = () => {\n\n    const { tracks, playing } = useContext(GlobalContext)\n\n    const homeData = useMemo(() => {\n\n        const obj = {\n            artists: {},\n            singles: []\n        }\n        \n        const singlesShown = 8, artistsShown = 5\n\n        const latest_tracks = tracks.slice(0, singlesShown)\n\n        if (!utils._.isEqual(obj.singles, latest_tracks)) {\n\n            obj.singles = latest_tracks\n            \n        }\n\n        let count = 1\n\n        for (const t of tracks) {\n\n            if (count <= artistsShown || t.artist in obj.artists) {\n\n                if (t.type === 'song') { //looking for non podcast tracks\n        \n                    if (t.artist in obj.artists) {\n            \n                        if (!utils.containsExactObject(t, obj.artists[t.artist].songs)) {\n                            obj.artists[t.artist].songs.push(t)\n                        }\n                        \n                    } else { //first song for artist\n            \n                        obj.artists[t.artist] = {\n                            name: t.artist,\n                            image: t.src, //using first song's image as artist's\n                            songs: [t]\n                        }\n\n                        count++\n            \n                    }\n                    \n                }\n                \n            }\n            \n        }\n\n        return obj\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [tracks])\n\n    const tiles = Object.keys(homeData.artists).map(key => \n        <ArtistTile key={key} tileHeight=\"14em\" data={homeData.artists[key]} />\n    )\n\n    const singles = homeData.singles.map(single => \n        <TrackTile key={single._id} tileHeight=\"5em\" song={single} />\n    )\n\n    const playerShowingStyle = {\n        paddingBottom: playing !== 0 ? document.getElementById('play_modal').offsetHeight + 32 : 0\n    }\n\n    return (\n        <div className=\"home\" style={playerShowingStyle}>\n\n            {tracks.length > 0 &&\n                <>\n\n                    <div>\n                        <h1>Recommended Artists</h1>\n                    </div>\n\n                    <div className=\"album_grid\">\n                        {tiles}\n                    </div>\n\n                    <div className=\"singles_grid\">\n                        <h2>Top Singles</h2>\n                        {singles}\n                    </div>\n\n                </>\n            }\n            \n\n        </div>\n    )\n}\n\nexport default Home\n","import { useMemo, useContext } from \"react\";\nimport { GlobalContext } from \"../../context/GlobalState\";\nimport TrackTile from \"../TrackTile/TrackTile\";\nimport \"./Explore.css\";\n\nconst Explore = () => {\n\tconst { tracks, playing } = useContext(GlobalContext);\n\n\tconst shuffle = (arr) => {\n\t\tconst array = [...arr];\n\n\t\tlet currentIndex = array.length,\n\t\t\trandomIndex;\n\n\t\t// While there remain elements to shuffle...\n\t\twhile (0 !== currentIndex) {\n\t\t\t// Pick a remaining element...\n\t\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\t\tcurrentIndex--;\n\n\t\t\t// And swap it with the current element.\n\t\t\t[array[currentIndex], array[randomIndex]] = [\n\t\t\t\tarray[randomIndex],\n\t\t\t\tarray[currentIndex]\n\t\t\t];\n\t\t}\n\n\t\treturn array;\n\t};\n\n\tconst singlesArr = useMemo(() => {\n\t\tconst arr = [],\n\t\t\tshuffled_tracks = shuffle(tracks);\n\n\t\tlet index = 0;\n\n\t\tfor (const t of shuffled_tracks) {\n\t\t\tif (t.type === \"song\") {\n\t\t\t\t//looking for non podcast tracks\n\n\t\t\t\tt.index = index;\n\n\t\t\t\tindex++;\n\n\t\t\t\tarr.push(t);\n\t\t\t}\n\t\t}\n\n\t\treturn arr;\n\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [tracks]);\n\n\tconst singles = singlesArr.map((single) => (\n\t\t<TrackTile\n\t\t\tkey={single._id}\n\t\t\ttileHeight=\"12em\"\n\t\t\tsong={single}\n\t\t\ttilesPerRow={5}\n\t\t\tplaylist={singlesArr}\n\t\t\tindex={single.index}\n\t\t/>\n\t));\n\n\tconst playerShowingStyle = {\n\t\tpaddingBottom:\n\t\t\tplaying !== 0\n\t\t\t\t? document.getElementById(\"play_modal\").offsetHeight + 32\n\t\t\t\t: 0\n\t};\n\n\treturn (\n\t\t<div className=\"explore\" style={playerShowingStyle}>\n\t\t\t{tracks.length > 0 && (\n\t\t\t\t<>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h1>Explore</h1>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"explore_grid\">{singles}</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Explore;\n","import { useMemo, useContext } from 'react'\nimport { GlobalContext } from '../../context/GlobalState'\nimport TrackTile from '../TrackTile/TrackTile'\nimport \"./Podcast.css\"\n\nconst Podcast = () => {\n\n    const { tracks, playing } = useContext(GlobalContext)\n    \n    const shuffle = arr => {\n        const array = [...arr]\n\n    \tlet currentIndex = array.length,\n    \t\trandomIndex\n\n    \t// While there remain elements to shuffle...\n    \twhile (0 !== currentIndex) {\n\n    \t\t// Pick a remaining element...\n    \t\trandomIndex = Math.floor(Math.random() * currentIndex)\n    \t\tcurrentIndex--\n\n    \t\t// And swap it with the current element.\n    \t\t[array[currentIndex], array[randomIndex]] = [\n    \t\t\tarray[randomIndex], array[currentIndex]\n    \t\t]\n    \t}\n\n    \treturn array\n    }\n\n    const podcastsArr = useMemo(() => {\n\n        const arr = [], shuffled_tracks = shuffle(tracks)\n\n        let index = 0\n\n        for (const t of shuffled_tracks) {\n\n            if (t.type === 'podcast') { //looking for non podcast tracks\n\n                t.index = index\n\n                index++\n\n                arr.push(t)\n\n            }\n            \n        }\n\n        return arr\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [tracks])\n\n    const podcasts = podcastsArr.map(single => \n        <TrackTile key={single._id} tileHeight=\"12em\" song={single} tilesPerRow={5} playlist={podcastsArr} index={single.index} />\n    )\n\n    const playerShowingStyle = {\n        paddingBottom: playing !== 0 ? document.getElementById('play_modal').offsetHeight + 32 : 0\n    }\n\n    return (\n        <div className=\"podcast\" style={playerShowingStyle}>\n\n            {tracks.length > 0 &&\n                <>\n\n                    <div>\n                        <h1>Podcasts</h1>\n                    </div>\n\n                    <div className=\"podcast_grid\">\n                        {podcasts}\n                    </div>\n\n                </>\n            }\n            \n        </div>\n    )\n}\n\nexport default Podcast\n","export default __webpack_public_path__ + \"static/media/forward.34ceb933.svg\";","export default __webpack_public_path__ + \"static/media/mute.a939919a.svg\";","import { useState, useEffect, useContext } from \"react\";\nimport { GlobalContext } from \"../../context/GlobalState\";\nimport { Range, getTrackBackground } from \"react-range\";\nimport \"./Player.css\";\nimport play from \"../../assets/icons/play.svg\";\nimport pause from \"../../assets/icons/pause.svg\";\nimport forward from \"../../assets/icons/forward.svg\";\nimport mute from \"../../assets/icons/mute.svg\";\n\nconst preloadSound = (src) => {\n\tvar sound = document.createElement(\"audio\");\n\tsound.autoPlay = false;\n\tsound.src = src;\n\treturn sound;\n};\n\nconst Player = () => {\n\tconst {\n\t\tsongs,\n\t\tcurrentSong,\n\t\tsetCurrentSong,\n\t\tplaying,\n\t\tsetPlaying,\n\t\tsetCurrentSongID\n\t} = useContext(GlobalContext);\n\tconst [playback, setPlayback] = useState([0]);\n\tconst [stopped, setStopped] = useState(false);\n\tconst [songURL, setSongURL] = useState(null);\n\tconst [max, setMax] = useState(100);\n\tconst [playerLoaded, setPlayerLoaded] = useState(false);\n\tconst [volume, setVolume] = useState([1]);\n\n\tconst player = document.getElementById(\"player\");\n\n\tconst playOnReady = () => {\n\t\tsetPlayback([0]);\n\n\t\tlet errors = 0;\n\n\t\tconst handle_src_error = () => {\n\t\t\tif (errors <= 4) {\n\t\t\t\t//attempt to reload the source 5 times before moving to the next track\n\t\t\t\terrors++;\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tplayer.load();\n\t\t\t\t}, 1000);\n\t\t\t} else {\n\t\t\t\terrors = 0;\n\t\t\t\tdocument\n\t\t\t\t\t.getElementById(\"song_source\")\n\t\t\t\t\t.removeEventListener(\"error\", handle_src_error);\n\t\t\t\thandleForward();\n\t\t\t}\n\t\t};\n\n\t\tdocument\n\t\t\t.getElementById(\"song_source\")\n\t\t\t.addEventListener(\"error\", handle_src_error);\n\n\t\tplayer.load();\n\n\t\tplayer.oncanplay = () => {\n\t\t\tsetPlayerLoaded(true);\n\t\t\tsetMax(player.duration);\n\t\t\tplayer.volume = volume[0];\n\n\t\t\tplayer.ontimeupdate = () => {\n\t\t\t\tsetPlayback([player.currentTime]);\n\t\t\t};\n\n\t\t\tplayer.onplay = function () {\n\t\t\t\tsetPlaying(1); //0 not playing, 1 playing, 2 waiting\n\t\t\t};\n\n\t\t\tplayer.onpause = function () {\n\t\t\t\tsetPlaying(2);\n\t\t\t};\n\n\t\t\tplayer.onended = function () {\n\t\t\t\tsetPlaying(1); //onend also pauses the song, must be set to play next\n\t\t\t\thandleForward();\n\t\t\t};\n\n\t\t\tif (playing === 1) {\n\t\t\t\tplayer.play();\n\n\t\t\t\tif (\"mediaSession\" in navigator) {\n\t\t\t\t\tnavigator.mediaSession.metadata = new window.MediaMetadata({\n\t\t\t\t\t\ttitle: songs[currentSong].name,\n\t\t\t\t\t\tartist: songs[currentSong].artist,\n\t\t\t\t\t\tartwork: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsrc: songs[currentSong].src,\n\t\t\t\t\t\t\t\ttype: \"image/png\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t});\n\n\t\t\t\t\tconst actionHandlers = [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"previoustrack\",\n\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\thandleBack();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"nexttrack\",\n\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\thandleForward();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"stop\",\n\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\tsetStopped(true);\n\t\t\t\t\t\t\t\tif (player.paused) {\n\t\t\t\t\t\t\t\t\t//check if song is already paused - hook won't fire\n\t\t\t\t\t\t\t\t\tsetPlaying(0);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t];\n\n\t\t\t\t\tfor (const [action, handler] of actionHandlers) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tnavigator.mediaSession.setActionHandler(\n\t\t\t\t\t\t\t\taction,\n\t\t\t\t\t\t\t\thandler\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t`The media session action \"${action}\" is not supported yet.`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t};\n\n\tuseEffect(() => {\n\t\tif (songs !== null) {\n\t\t\tpreloadSound(songs[currentSong].song);\n\n\t\t\tsetSongURL(songs[currentSong].song);\n\t\t\tsetCurrentSongID(songs[currentSong]._id);\n\n\t\t\tplayOnReady();\n\t\t}\n\n\t\t// disable, hook on playOnReady will cause exhaustive loop\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [songs, currentSong]);\n\n\tuseEffect(() => {\n\t\tif (stopped && playing !== 1) {\n\t\t\tsetPlaying(0);\n\t\t\tsetCurrentSongID(null);\n\t\t} else if (playing === 1 && stopped) {\n\t\t\tsetStopped(false);\n\n\t\t\tif (playerLoaded) {\n\t\t\t\tplayer.currentTime = 0;\n\t\t\t\tsetPlayback([0]);\n\n\t\t\t\tif (player.paused) {\n\t\t\t\t\tplayer.play();\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (playing === 1 && !stopped) {\n\t\t\tif (playerLoaded) {\n\t\t\t\tif (player.paused) {\n\t\t\t\t\tplayer.play();\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (playing === 2 && !stopped) {\n\t\t\tif (playerLoaded) {\n\t\t\t\tif (!player.paused) {\n\t\t\t\t\tplayer.pause();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [playing]);\n\n\tconst handlePlayPause = () => {\n\t\tif (playerLoaded) {\n\t\t\tif (player.paused) {\n\t\t\t\tplayer.play();\n\t\t\t} else {\n\t\t\t\tplayer.pause();\n\t\t\t}\n\t\t}\n\t};\n\n\tconst handlePosition = (values) => {\n\t\tsetPlayback([values[0]]);\n\t\tif (playerLoaded) {\n\t\t\tplayer.currentTime = values[0];\n\t\t}\n\t};\n\n\tconst handleForward = () => {\n\t\tconst new_value = currentSong + 1;\n\t\tif (new_value < songs.length) {\n\t\t\tsetCurrentSong(new_value);\n\t\t} else {\n\t\t\tsetCurrentSong(0); //back to first\n\t\t\t// TODO: make this an optional setting\n\t\t}\n\t};\n\n\tconst handleBack = () => {\n\t\tconst new_value = currentSong - 1;\n\t\tif (playerLoaded) {\n\t\t\tif (new_value !== -1 && player.currentTime < 5) {\n\t\t\t\tsetCurrentSong(new_value);\n\t\t\t} else {\n\t\t\t\tsetPlayback([0]);\n\t\t\t\tplayer.currentTime = 0;\n\t\t\t}\n\t\t}\n\t};\n\n\tconst returnPosition = (inputSeconds) => {\n\t\tconst minutes = Math.trunc(inputSeconds / 60);\n\t\tlet seconds = Math.trunc(inputSeconds % 60);\n\n\t\tif (seconds < 10) seconds = \"0\" + seconds;\n\n\t\treturn minutes + \":\" + seconds;\n\t};\n\n\tconst handleVolume = (values) => {\n\t\tconst new_volume = values[0];\n\t\tsetVolume([new_volume]);\n\n\t\tif (playerLoaded) {\n\t\t\tif (new_volume > 0 && player.muted) {\n\t\t\t\tplayer.muted = false;\n\t\t\t}\n\n\t\t\tplayer.volume = new_volume;\n\t\t}\n\t};\n\n\tconst handleMuted = () => {\n\t\tif (playerLoaded) {\n\t\t\tif (player.muted) {\n\t\t\t\tsetVolume([player.volume]); //the player will be unmuted in this call\n\t\t\t} else {\n\t\t\t\tsetVolume([0]); //the player will be muted in this call\n\t\t\t}\n\n\t\t\tplayer.muted = !player.muted;\n\t\t}\n\t};\n\n\tconst modalControl = {\n\t\tdisplay: playing === 0 ? \"none\" : \"flex\"\n\t};\n\n\tconst mediaButton = playing === 1 ? pause : play;\n\n\treturn (\n\t\t<>\n\t\t\t<div id=\"play_modal\" className=\"play_modal\" style={modalControl}>\n\t\t\t\t{songs && (\n\t\t\t\t\t<div className=\"song_data\">\n\t\t\t\t\t\t<img src={songs[currentSong].src} alt=\"\"></img>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<b>{songs[currentSong].name}</b>\n\t\t\t\t\t\t\t<p>{songs[currentSong].artist}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\n\t\t\t\t<div className=\"controls_wrapper\">\n\t\t\t\t\t<div className=\"main_control\">\n\t\t\t\t\t\t<button onClick={handleBack}>\n\t\t\t\t\t\t\t<img src={forward} alt=\"\"></img>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button onClick={handlePlayPause}>\n\t\t\t\t\t\t\t<img src={mediaButton} alt=\"\"></img>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button onClick={handleForward}>\n\t\t\t\t\t\t\t<img src={forward} alt=\"\"></img>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"time_tracker\">\n\t\t\t\t\t\t\t{returnPosition(playback[0])}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<Range\n\t\t\t\t\t\t\tvalues={playback}\n\t\t\t\t\t\t\tstep={0.001}\n\t\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\t\tmax={max}\n\t\t\t\t\t\t\tonChange={handlePosition}\n\t\t\t\t\t\t\trenderTrack={({ props, children }) => (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tonMouseDown={props.onMouseDown}\n\t\t\t\t\t\t\t\t\tonTouchStart={props.onTouchStart}\n\t\t\t\t\t\t\t\t\tclassName={\"timebar\"}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tref={props.ref}\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\theight: \"0.25em\",\n\t\t\t\t\t\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\t\t\t\t\t\tborderRadius: \"4px\",\n\t\t\t\t\t\t\t\t\t\t\tdisplay: \"inline-block\",\n\t\t\t\t\t\t\t\t\t\t\tbackground: getTrackBackground({\n\t\t\t\t\t\t\t\t\t\t\t\tvalues: playback,\n\t\t\t\t\t\t\t\t\t\t\t\tcolors: [\"#00C8D4\", \"#0F141D\"],\n\t\t\t\t\t\t\t\t\t\t\t\tmin: 0,\n\t\t\t\t\t\t\t\t\t\t\t\tmax: max\n\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t\talignSelf: \"center\"\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{children}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\trenderThumb={({ props, isDragged }) => (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t...props.style,\n\t\t\t\t\t\t\t\t\t\theight: \"0.75em\",\n\t\t\t\t\t\t\t\t\t\twidth: \"0.75em\",\n\t\t\t\t\t\t\t\t\t\tborderRadius: \"13px\",\n\t\t\t\t\t\t\t\t\t\tbackgroundColor: isDragged\n\t\t\t\t\t\t\t\t\t\t\t? \"#00C8D4\"\n\t\t\t\t\t\t\t\t\t\t\t: \"#00C8D4\",\n\t\t\t\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\t\t\t\t\t\talignItems: \"center\"\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t></div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<div className=\"time_tracker\">\n\t\t\t\t\t\t\t{returnPosition(max)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"volume_control\">\n\t\t\t\t\t<button className=\"mute_button\" onClick={handleMuted}>\n\t\t\t\t\t\t<img src={mute} alt=\"\"></img>\n\t\t\t\t\t</button>\n\n\t\t\t\t\t<Range\n\t\t\t\t\t\tvalues={volume}\n\t\t\t\t\t\tstep={0.01}\n\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\tmax={1}\n\t\t\t\t\t\tonChange={handleVolume}\n\t\t\t\t\t\trenderTrack={({ props, children }) => (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tonMouseDown={props.onMouseDown}\n\t\t\t\t\t\t\t\tonTouchStart={props.onTouchStart}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t...props.style,\n\t\t\t\t\t\t\t\t\theight: \"0.25em\",\n\t\t\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\t\t\twidth: \"5em\"\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tref={props.ref}\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\theight: \"0.25em\",\n\t\t\t\t\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\t\t\t\t\tborderRadius: \"4px\",\n\t\t\t\t\t\t\t\t\t\tbackground: getTrackBackground({\n\t\t\t\t\t\t\t\t\t\t\tvalues: volume,\n\t\t\t\t\t\t\t\t\t\t\tcolors: [\"#00C8D4\", \"#0F141D\"],\n\t\t\t\t\t\t\t\t\t\t\tmin: 0,\n\t\t\t\t\t\t\t\t\t\t\tmax: 1\n\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\talignSelf: \"center\"\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{children}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\trenderThumb={({ props }) => (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t...props.style,\n\t\t\t\t\t\t\t\t\tdisplay: \"none\"\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t></div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<video style={{ display: \"none\" }} id=\"player\">\n\t\t\t\t<source id=\"song_source\" src={songURL} type=\"video/mp4\" />\n\t\t\t</video>\n\t\t</>\n\t);\n};\n\nexport default Player;\n","export default __webpack_public_path__ + \"static/media/music-pass.61a16a6a.png\";","export default __webpack_public_path__ + \"static/media/golden-pass.86ef5316.png\";","import \"./MusicPass.css\"\nimport pass from '../../assets/music-pass.png'\nimport goldenPass from '../../assets/golden-pass.png'\n\n\n\nconst MusicPass = () => {\n    return (\n        <div className=\"page-wrapper\">\n            <h1>Buy Music Pass</h1>\n            <h3>Enjoy free music listening, exclusive content and more.</h3>\n\n            <div className=\"container\">\n              <div className=\"card-container\">\n                <img className=\"music-pass\" src={pass} alt=\"\" />\n                <p>All access pass</p>\n                <p className=\"small\">Recharge your pass as much as you want.</p>\n                <h5>200/200 left</h5>\n                <button className=\"btn-buy\">Coming soon</button>\n              </div>\n              <div className=\"card-container\">\n                <img className=\"golden-pass\" src={goldenPass} alt=\"\" />\n                <p>Lifetime pass</p>\n                <p className=\"small\">Listen to every song, forever without limits.</p>\n                <h5>50/50 left</h5>\n                <button className=\"btn-buy\">Coming soon</button>\n              </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MusicPass\n","import \"./MyPass.css\"\n\nconst MusicPass = () => {\n    return (\n        <div className=\"page-wrapper\">\n            <h1>My Music Pass</h1>\n            <h3>Manage and top-up your Music Pass.</h3>\n\n            <div className=\"container\">\n              <div className=\"input-group\">\n                <p>Balance:</p>\n                <input type=\"number\" placeholder=\"Top up amount\" />\n                <button className=\"btn-buy\">TOPUP</button>\n                <button className=\"btn-buy btn-outline\">Buy more ISLA</button>\n              </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MusicPass\n","import { useMemo, useEffect, useContext } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { useQuery } from \"urql\";\nimport axios from \"axios\";\nimport axiosRetry from \"axios-retry\";\n\nimport { GlobalContext } from \"./context/GlobalState\";\nimport utils from \"./utils\";\n\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport Home from \"./components/Home/Home\";\nimport Explore from \"./components/Explore/Explore\";\nimport Podcast from \"./components/Podcast/Podcast\";\n// import Library from \"./components/Library\";\nimport Player from \"./components/Player/Player\";\nimport MusicPass from \"./components/MusicPass/MusicPass\";\nimport MyPass from \"./components/MyPass/MyPass\";\nimport ArtistView from \"./components/ArtistView/ArtistView\";\n\naxiosRetry(axios, {\n\tretries: 3, // number of retries\n\tretryDelay: (retryCount) => {\n\t\tconsole.log(`retry attempt: ${retryCount}`);\n\t\treturn retryCount * 1000; // time interval between retries\n\t},\n\tretryCondition: (error) => {\n\t\t// if retry condition is not specified, by default idempotent requests are retried\n\t\treturn error.response.status === 503;\n\t}\n});\n\nconst preloadImage = (url) => {\n\tvar img = new Image();\n\timg.src = url;\n};\n\nconst App = () => {\n\tconst { tracks, addTrack, globalArtistModalData } =\n\t\tuseContext(GlobalContext);\n\n\tconst TracksQuery = `\n      query {\n        tracks {\n            id,\n            artist {\n                name\n            },\n\t\t\talbum,\n            metadata,\n            image,\n            title\n        }\n        podcasts {\n            id,\n            artist,\n            metadata,\n            image,\n            title\n        }\n      }\n    `;\n\n\tconst [result] = useQuery({\n\t\tquery: TracksQuery\n\t});\n\n\tconst { data, fetching, error } = result;\n\n\tuseEffect(() => {\n\t\tif (data) {\n\t\t\tconsole.log(\"tracks\", data);\n\n\t\t\tconst process_track = (track, type) => {\n\t\t\t\tif (!utils.containsID(track.id, tracks)) {\n\t\t\t\t\tlet uri = track.metadata,\n\t\t\t\t\t\tipfs = false,\n\t\t\t\t\t\tfetch_metadata = true;\n\n\t\t\t\t\tif (track.image) {\n\t\t\t\t\t\tfetch_metadata = false;\n\n\t\t\t\t\t\tpreloadImage(track.image);\n\n\t\t\t\t\t\tif (track.metadata) {\n\t\t\t\t\t\t\tconst ready_track = {\n\t\t\t\t\t\t\t\t_id: track.id,\n\t\t\t\t\t\t\t\tname: track.title,\n\t\t\t\t\t\t\t\tsrc: track.image,\n\t\t\t\t\t\t\t\tsong: track.metadata,\n\t\t\t\t\t\t\t\ttype: type\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tif (typeof track.artist === \"object\") {\n\t\t\t\t\t\t\t\tready_track.artist = track.artist.name;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tready_track.artist = track.artist;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (track.album) {\n\t\t\t\t\t\t\t\tready_track.album = track.album;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t!utils.containsExactObject(ready_track, tracks)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\taddTrack(ready_track);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (fetch_metadata) {\n\t\t\t\t\t\tif (uri) {\n\t\t\t\t\t\t\tif (uri.indexOf(\"ipfs\") > -1) {\n\t\t\t\t\t\t\t\turi = \"https://ipfs.io/\" + track.metadata;\n\t\t\t\t\t\t\t\tipfs = true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\taxios\n\t\t\t\t\t\t\t\t.get(uri)\n\t\t\t\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t\t\t\tconst d = response.data;\n\n\t\t\t\t\t\t\t\t\tlet image = d.image,\n\t\t\t\t\t\t\t\t\t\tsong = d.animation_url;\n\n\t\t\t\t\t\t\t\t\tif (ipfs) {\n\t\t\t\t\t\t\t\t\t\timage = utils.format_src(d.image);\n\t\t\t\t\t\t\t\t\t\tsong = utils.format_src(\n\t\t\t\t\t\t\t\t\t\t\td.animation_url\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tpreloadImage(image);\n\n\t\t\t\t\t\t\t\t\tconst ready_track = {\n\t\t\t\t\t\t\t\t\t\t_id: track.id,\n\t\t\t\t\t\t\t\t\t\tname: d.name,\n\t\t\t\t\t\t\t\t\t\tsrc: image,\n\t\t\t\t\t\t\t\t\t\tsong: song,\n\t\t\t\t\t\t\t\t\t\ttype: type\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\tif (typeof track.artist === \"object\") {\n\t\t\t\t\t\t\t\t\t\tready_track.artist = track.artist.name;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tready_track.artist = track.artist;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (track.album) {\n\t\t\t\t\t\t\t\t\t\tready_track.album = track.album;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t!utils.containsExactObject(\n\t\t\t\t\t\t\t\t\t\t\tready_track,\n\t\t\t\t\t\t\t\t\t\t\ttracks\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\taddTrack(ready_track);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.catch((e) => {\n\t\t\t\t\t\t\t\t\tconsole.error(uri, e);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfor (const track of data.tracks) {\n\t\t\t\tprocess_track(track, \"song\");\n\t\t\t}\n\n\t\t\tfor (const track of data.podcasts) {\n\t\t\t\tprocess_track(track, \"podcast\");\n\t\t\t}\n\t\t}\n\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [data]);\n\n\tconst globalArtistView = useMemo(() => {\n\t\tif (globalArtistModalData) {\n\t\t\treturn (\n\t\t\t\t<ArtistView\n\t\t\t\t\tmetadata={globalArtistModalData}\n\t\t\t\t\tstyle={{ display: \"none\" }}\n\t\t\t\t\tglobal={true}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\treturn null;\n\t}, [globalArtistModalData]);\n\n\treturn (\n\t\t<Router>\n\t\t\t<div className=\"app\">\n\t\t\t\t<Sidebar />\n\n\t\t\t\t<div style={contentStyle}>\n\t\t\t\t\t<Navbar />\n\n\t\t\t\t\t{fetching && <p style={textStyle}>Loading...</p>}\n\n\t\t\t\t\t{error && (\n\t\t\t\t\t\t<p style={textStyle}>\n\t\t\t\t\t\t\tFailed to load tracks, please try again.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<Route path=\"/app\" exact component={Home} />\n\t\t\t\t\t<Route path=\"/explore\" component={Explore} />\n\t\t\t\t\t<Route path=\"/podcast\" component={Podcast} />\n\t\t\t\t\t{/* <Route path=\"/library\" component={Library} /> */}\n\t\t\t\t\t<Route path=\"/musicPass\" component={MusicPass} />\n\t\t\t\t\t<Route path=\"/myPass\" component={MyPass} />\n\n\t\t\t\t\t{globalArtistView}\n\t\t\t\t</div>\n\n\t\t\t\t<Player />\n\t\t\t</div>\n\t\t</Router>\n\t);\n};\n\nconst contentStyle = {\n\twidth: \"100%\",\n\theight: \"100%\"\n};\n\nconst textStyle = {\n\twidth: \"100%\",\n\tpaddingTop: \"1em\",\n\tpaddingLeft: \"0.75em\"\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GlobalProvider } from './context/GlobalState'\nimport { createClient, Provider } from 'urql'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst client = new createClient({\n\turl: 'https://api.thegraph.com/subgraphs/name/defiville/pirate-radio-tracks'\n})\n\nReactDOM.render( \n\n\t<React.StrictMode>\n\t\t<GlobalProvider>\n\t\t\t<Provider value={client}>\n\t\t\t\t<App/>\n\t\t\t</Provider>\n\t\t</GlobalProvider>\n\t</React.StrictMode>,\n\n\tdocument.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}